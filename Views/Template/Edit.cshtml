@model HaloCareCore.Models.Communications.SmsMessageTemplates

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<style>
    body {
        background-color: #f9f9fc !important;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }

    .error-alert {
        width: 100%;
        margin: 0 auto;
        background-color: rgba(217, 83, 79, 0.1);
        padding: 10px;
        border-left-color: #d9534f !important;
        border: 1px solid transparent;
        border-left-width: 5px;
        border-radius: 3px;
        margin: 0 auto;
        font-family: 'Open Sans', sans-serif;
        font-size: 12px;
        margin: 0 0 5px 0;
        margin-top: -10px;
        margin-bottom: 20px;
    }

        .error-alert span {
            color: #d9534f;
            text-align: center;
        }
</style>
<javascript>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
    <link href='http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.min.css' rel='stylesheet' type='text/css'>

    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.default.css">
</javascript>

<div class="fullScreen_container zero-padding">

    <!--pageHeader-->
    <nav id="global-nav" class="nav">
        <div class="pull-left title">
            <h1 class="site-title_patientProfile">
                <span><i class="fas fa-comment-alt"></i>&emsp; Text templates</span>
            </h1>
        </div>
        <div class="pull-right title">
            <h1 class="site-title_userID pull-right">
                <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
            </h1>
            <h1 class="site-title_userID pull-right">
                @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
                {
                    <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
                }
            </h1>
            <h1 class="site-waffleIcon pull-right">
                <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
            </h1>
        </div>
    </nav>

    <!--breadCrumbs-->
    <ul class="breadcrumbs_fullScreens">
        <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
        <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
        <li><a href="@Url.Action("Index", "Template", new {})">Text message</a></li>
        <li><a href="#">@ViewBag.Title</a></li>
    </ul>

    <!--navCollection-->
    <div class="navCollection_fullScreens">
        @Html.Partial("_navCollection")
    </div>

    <div style="margin-bottom: 1%"></div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <h4 class="tableHeading">Edit a text message</h4>
            <hr class="fancyruler">

            <div class="form-horizontal editForm">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="hidden-fields">
                    @Html.HiddenFor(model => model.templateID)
                    <input type="hidden" name="title-validation" id="title-validation" />
                    <input type="hidden" name="message-validation" id="message-validation" />
                    <input type="hidden" name="error-title" id="error-title" value="@ViewBag.smsTitle" />
                    <input type="hidden" name="error-template" id="error-template" value="@ViewBag.smsTemplate" />
                    <div class="col-md-12"><div id="duplicate-title-notice" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Title already exists!</span></div></div></div>
                    <div class="col-md-12"><div id="duplicate-message-notice" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Template message already exists!</span></div></div></div>
                    <div class="col-md-12"><div id="error-duplicate" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; This combination, <b>Title:</b> @ViewBag.smsTitle, <b>Program:</b> @ViewBag.Program & <b>Template</b> already exists!</span></div></div></div>
                    <div class="col-md-12"><div id="error-duplicate-title" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; The <b>Title:</b> @ViewBag.smsTitle already exists!</span></div></div></div>
                    <div class="col-md-12"><div id="error-duplicate-template" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; The <b>Template:</b> @ViewBag.smsTemplate already exists!</span></div></div></div>
                </div>
                <br />
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "infoBox_editMember", @onblur = "CheckTextTitle();" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.smsLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.smsLanguage, new SelectList(Model.Languages.Where(x => x.Active == true), "languageName", "languageCode"), "Select", htmlAttributes: new { @class = "" })<br>
                        @Html.ValidationMessageFor(model => model.smsLanguage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--HCare-1043-->
                <div class="form-group">
                    @Html.LabelFor(model => model.program, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.program, new SelectList(Model.Programs.Where(x => x.Active == true), "code", "ProgramName"), "Select", htmlAttributes: new { @class = "" })<br>
                        @Html.ValidationMessageFor(model => model.program, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.template, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="color: #003366; margin-left: -3.5%">
                        <textarea id="template" name="template" placeholder="Write something..." class="smsTemplate" onblur="CheckTextMessage();">@Model.template</textarea>
                        @Html.ValidationMessageFor(model => model.template, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="margin-left: 0%!important; font-family: 'Century Gothic'!important; font-weight: 200;">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12" style="margin-left: 15.5%; margin-top: -26px">
                        <div class="checkbox assignmentCheck">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="fixedBack">
                <input value="Back" class="btn buttonRound_formBack go_back" style="width: 15%!important" />
                <input id="submit" type="submit" value="Save" class="btn buttonRound_formCreate" style="width: 15%!important" />
            </div>

        </div>


    }

</div>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

@section scripts{
    <script src="~/Scripts/layout-buttons-general.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>
    <script>
        initSelectize();
        function initSelectize() {
            $('#smsLanguage').selectize({
                persist: true,
                preload: true,
                maxItems: 1,
                delimiter: ',',
                valueField: 'id',
                labelField: 'name',
                searchField: ['name'],
                hideSelected: true,
                plugins: ['remove_button'],
                render: {
                    option: function (item, escape) {
                        return '<span class="name">' + escape(item.name) + '</span>';

                    }
                }
            }),
                $('#program').selectize({
                    persist: true,
                    preload: true,
                    maxItems: 1,
                    delimiter: ',',
                    valueField: 'id',
                    labelField: 'name',
                    searchField: ['name'],
                    hideSelected: true,
                    plugins: ['remove_button'],
                    render: {
                        option: function (item, escape) {
                            return '<span class="name">' + escape(item.name) + '</span>';

                        }
                    }
                })
        }
    </script>
    <script>
        function CheckTextMessage() {
            var id = $('#templateID').val();
            id = id.trim();

            var message = $('#template').val();
            message = message.trim();
            $("#message-validation").val("");

            $.ajax({
                url: '/Template/TextMessageCheck',
                type: "POST",
                dataType: "JSON",
                data: { template: message },
                success: function (result) {
                    var ID = result.templateID;
                    var description = result.template;
                    if (ID + '-' + description.toLowerCase() == id + '-' + name.toLowerCase()) { }
                    if (description.toLowerCase() == message.toLowerCase() && ID != id) {
                        $("#duplicate-message-notice").removeClass("hidden");
                        $("#message-validation").val(description);
                    }
                },
                error: function (result) {
                    $("#duplicate-message-notice").addClass("hidden");
                }
            });
        }

        $("#submit").click(function () {
            if ($("#message-validation").val().length > 0) {
                $("#template").focus();
                return false;
            }
        });

    </script>
    <script>
        function CheckTextTitle() {
            var id = $('#templateID').val();
            id = id.trim();

            var title = $('#title').val();
            title = title.trim();
            $("#title-validation").val("");

            $.ajax({
                url: '/Template/TextTitleCheck',
                type: "POST",
                dataType: "JSON",
                data: { name: title },
                success: function (result) {
                    var ID = result.templateID;
                    var description = result.title;

                    if (ID + '-' + description.toLowerCase() == id + '-' + title.toLowerCase()) { }
                    if (description.toLowerCase() == title.toLowerCase() && ID != id) {
                        $("#duplicate-title-notice").removeClass("hidden");
                        $("#title-validation").val(description);
                    }
                },
                error: function (result) {
                    $("#duplicate-title-notice").addClass("hidden");
                }
            });
        }

        $("#submit").click(function () {
            if ($("#title-validation").val().length > 0) {
                $("#title").focus();
                return false;
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            var ti = $('#error-title').val();
            var te = $('#error-template').val();
            if (ti.length > 0 && te.length > 0) {
                $("#error-duplicate").removeClass("hidden");
            }
            else if (ti.length > 0) {
                $("#error-duplicate-title").removeClass("hidden");
            }
            else if (te.length > 0) {
                $("#error-duplicate-template").removeClass("hidden");
            }
            if (te.length > 0) {
                $("#template").val(te);
            }
        });
    </script>
}


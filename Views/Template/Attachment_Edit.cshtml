@model HaloCareCore.Models.Communications.AttachmentTemplate
@using HaloCareCore.Extensions
@{
    ViewBag.Title = "Attachments";
    Layout = "~/Views/Shared/_layout-view-x.cshtml";
}

<javascript>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script src="https://www.jqueryscript.net/demo/jQuery-Plugin-For-Sortable-Bootstrap-Tables-Bootstrap-Sortable/Scripts/bootstrap-sortable.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.default.css">
</javascript>
<style>
    .selectize-control.single .selectize-input [data-value] {
        border: 1px solid transparent !important;
        border-radius: 0px !important;
    }

    .selectize-control.multi .selectize-input [data-value] {
        border: 1px solid transparent !important;
        border-radius: 0px !important;
        box-shadow: none !important;
    }

    .error-alert {
        display: none;
        background-color: rgba(217, 48, 78, 0.2);
        padding: 10px 12px 10px 12px;
        border: 1px solid transparent;
        border-radius: 0px;
        font: 100 12px 'Open Sans', sans-serif;
        color: rgb(217, 48, 78);
        margin: 0 0 0 0;
        margin-top: -10px;
        margin-bottom: -10px;
        margin-left: -15px;
        width: 102%;
        vertical-align: middle;
    }

        .error-alert span a {
            color: rgb(217, 48, 78);
            margin-top: -5px;
        }

    .new-account-row-insert {
        display: block;
        max-width: 1000px !important;
        width: 85%;
        max-height: 100px;
        height: 30px;
        margin-top: 5px;
        margin-left: 10px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        border-radius: 0px;
        border: none;
        border-bottom: 1px solid #e8e6e6;
        background-color: transparent !important;
        font-family: 'Century Gothic' !important;
        text-indent: 5px;
    }

    .required-color {
        color: transparent !important;
    }

    /*    ::-webkit-file-upload-button {
        color: #ffffff;
        background-color: dodgerblue;
        border: 1px solid dodgerblue;
        margin-top: 4%;
        margin-left: 4%;
        padding: 4px 4px;
        font-family: 'Century Gothic';
        font-size: 1em;
        line-height: 1.6;
        border-radius: 3px;
        width: 100px;
        outline: none !important;
        z-index: 40;
        font-weight: 100;
        transition: 0.3s;
    }*/

    label.attachment-btn {
        color: #ffffff;
        background-color: dodgerblue;
        border: 1px solid dodgerblue;
        margin-top: 0.5%;
        margin-left: 1%;
        padding: 4px 4px;
        font-family: 'Century Gothic';
        font-size: 1em;
        line-height: 1.6;
        border-radius: 3px;
        width: 100px;
        outline: none !important;
        z-index: 40;
        font-weight: 100;
        transition: 0.3s;
        text-align: center;
    }

    #file-chosen {
        margin-left: 0.3rem;
        font-family: 'Century Gothic';
        color: #ccc;
    }

    .file-check-yes {
        color: #33BB66;
        font-size: 18px;
    }

    .file-check-no {
        color: rgb(244 113 116 / 0.50);
        font-size: 18px;
        margin-bottom: -2px;
        display: none;
    }
</style>

<div id="instruction-wrapper">
    <div class="instruction-panel">
        <h class="account-step">Instruction</h>
        <p class="account-step-instruction">Edit attachment information.</p>
        <ul style="padding: 0">
            <li class="account-step-list asl-1 active-step"><span class="number-circle circle-1 active-circle">1</span>@Html.DisplayNameFor(model => model.AttachmentName)</li>
            <li class="account-step-list asl-2"><span class="number-circle circle-2">2</span>@Html.DisplayNameFor(model => model.AttachmentType)</li>
            <li class="account-step-list asl-3"><span class="number-circle circle-3">3</span>@Html.DisplayNameFor(model => model.FileName)</li>
            <li class="account-step-list asl-4"><span class="number-circle circle-4">4</span>@Html.DisplayNameFor(model => model.Program)</li>
        </ul>
    </div>
</div>

<div class="collapse in">
    <div class="card card-body">
        <div class="collapse-body">
            <div class="new-account-panel">
                @using (Html.BeginForm("Attachment_Edit", "Template", FormMethod.Post, new { id = "attachment-edit", enctype = "multipart/form-data" }))
                {
                    <div class="col-md-12 row">
                        <div class="account-heading">Attachment edit</div>
                        <p class="account-sub-header-new">Edit the attachment information below and click submit to continue.</p>
                    </div>
                    <hr class="fancyruler">
                    <input id="validation" name="validation" value="@ViewBag.Validation" hidden/>
                    <input id="attachmentID" name="attachmentID" value="@Model.Id" hidden />
                    <div id="attachment-validation" class="error-alert"></div>

                    <table class="table details-table" id="new-template">
                        <tr>
                            <td class="new-account-row-heading">@Html.DisplayNameFor(model => model.AttachmentName) <sup style="font-size: 5px; top: -8px"><i id="required-name" class="fas fa-asterisk pulser"></i></sup></td>
                            <td class="row-information">
                                @Html.EditorFor(model => model.AttachmentName, new { htmlAttributes = new { @class = "new-account-row-insert", @autocomplete = "off", @required = "required", @onkeyup = "Validation1()" } })
                                <span id="name-validation" class="text-danger" style="margin-left: 1%"></span>
                            </td>
                        </tr>
                        <tr>
                            <td class="new-account-row-heading">@Html.DisplayNameFor(model => model.AttachmentType) <sup style="font-size: 5px; top: -8px"><i id="required-type" class="fas fa-asterisk pulser"></i></sup></td>
                            <td class="row-information">
                                <select id="attachment-type" name="attachment-type" class="selectize-1" style="width: 47%;" placeholder="Select" onchange="Validation2()" required>
                                    <option value="@Model.AttachmentExtension" subtext="" selected="selected">@Model.AttachmentType</option>
                                    <option value=".xlsx" subtext="Attachment is an excel document.">Excel</option>
                                    <option value=".jpg" subtext="Attachment is a jpeg document.">JPEG</option>
                                    <option value=".pdf" subtext="Attachment is a pdf document.">PDF</option>
                                    <option value=".txt" subtext="Attachment is a text document.">Text</option>
                                    <option value=".docx" subtext="Attachment is a word document.">Word</option>
                                </select>
                                <input type="text" id="attachment-type-text" name="attachment-type-text" value="@ViewBag.attachmenttype" hidden/>
                                <span id="type-validation" class="text-danger" style="margin-left: 1%"></span>
                            </td>
                        </tr>
                        <tr>
                            <td class="new-account-row-heading">@Html.DisplayNameFor(model => model.FileName) <sup style="font-size: 5px; top: -8px"><i id="required-attachment" class="fas fa-asterisk pulser"></i></sup></td>
                            <td class="row-information">

                                <input type="file" id="file" name="file" class="hidden" onchange="Validation3();" />
                                <label class="attachment-btn" for="file">Choose File &nbsp;</label>
                                <span id="file-chosen">@Model.FileName</span>

                                <span class="row" style="display: inline-flex">
                                    <input type="checkbox" id="check-animation" />
                                    <label for="check-animation" id="animated-check-circle">
                                        <div class="check-icon"></div>
                                    </label>

                                    <i class="far fa-times-circle file-check-no"></i>
                                </span>
                                <br />
                                <span id="file-validation" class="text-danger" style="margin-left: 1%"></span>
                            </td>
                        </tr>
                        <tr>
                            <td class="new-account-row-heading">@Html.DisplayNameFor(model => model.Program) </td>
                            <td class="row-information">
                                @Html.DropDownListFor(model => model.Program, new SelectList(Model.Programs.Where(x => x.Active == true), "programID", "ProgramName"), "Select", htmlAttributes: new { @class = "selectize-2", @onchange = "Validation4()" })
                                <span id="program-validation" class="text-danger" style="margin-left: 1%"></span>
                            </td>
                        </tr>
                        <tr>
                            <td class="new-account-row-heading">@Html.DisplayNameFor(model => model.Active)</td>
                            <td class="row-information checkbox">
                                @Html.EditorFor(model => model.Active)
                            </td>
                        </tr>
                    </table>

                    <div class="sf-footer">
                        <input type="button" id="attachment-back" value="Back" class="btn modal-button-previous go_back" onclick="backKey();" />
                        <input type="submit" id="attachment-submit" value="Submit" class="btn modal-button-next" onclick="storageKey(); NameCheck(); TypeCheck(); AttachmentCheck(); ProgramCheck();" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

@section scripts{
    <script src="~/bundles/jqueryval"></script>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>
    <script>
        initSelectize();
        function initSelectize() {
            $('#attachment-type').selectize({
                persist: true,
                preload: true,
                maxItems: 1,
                delimiter: ',',
                valueField: 'id',
                labelField: 'name',
                searchField: ['name'],
                hideSelected: true,
                plugins: ['remove_button'],
                render: {
                    option: function (item, escape) {
                        return '<span class="name">' + escape(item.name) + '</span>';
                    }
                },
            }),
                $('#Program').selectize({
                    persist: true,
                    preload: true,
                    maxItems: 1,
                    delimiter: ',',
                    valueField: 'id',
                    labelField: 'name',
                    searchField: ['name'],
                    hideSelected: true,
                    plugins: ['remove_button'],
                    render: {
                        option: function (item, escape) {
                            return '<span class="name">' + escape(item.name) + '</span>';
                        }
                    },
                })
        }
    </script>
    <script>
        $(function () {
            //attachment-name
            var name = $("#AttachmentName").val();
            if (name.length > 0) {
                $("#required-name").addClass("required-color");
                $('li').find('span.circle-1').text("✓");
                $('li').find('span.circle-1').addClass("complete-circle");
            }
            else {
                $("#required-name").removeClass("required-color");
                $('li').find('span.circle-1').text("1");
                $('li').find('span.circle-1').removeClass("complete-circle");
            }
            //attachment-type
            var type = $("#attachment-type").val();
            if (type.length > 0) {
                $("#required-type").addClass("required-color");
                $('li').find('span.circle-2').text("✓");
                $('li').find('span.circle-2').addClass("complete-circle");
            }
            else {
                $("#required-type").removeClass("required-color");
                $('li').find('span.circle-2').text("2");
                $('li').find('span.circle-2').removeClass("complete-circle");
            }
            //attachment-file
                $("#required-attachment").addClass("required-color");
                $('li').find('span.circle-3').text("✓");
                $('li').find('span.circle-3').addClass("complete-circle");
            //attachment-program
            var program = $("#Program").val();
            if (program.length > 0) {
                $("#required-program").addClass("required-color");
                $('li').find('span.circle-4').text("✓");
                $('li').find('span.circle-4').addClass("complete-circle");
                $('#program-validation').addClass("hidden");
            }
            else {
                $("#required-program").removeClass("required-color");
                $('li').find('span.circle-4').text("4");
                $('li').find('span.circle-4').removeClass("complete-circle");
                $('#program-validation').removeClass("hidden");
            }


   
        });
    </script>
    <script>
        $(function () {
            $('li.asl-1').click(function () {
                $("#AttachmentName").focus();
                $('li.asl-1').addClass("active-step");
                $('li span.circle-1').addClass("active-circle");
                $('li.asl-2').removeClass("active-step");
                $('li span.circle-2').removeClass("active-circle");
                $('li.asl-3').removeClass("active-step");
                $('li span.circle-3').removeClass("active-circle");
                $('li.asl-4').removeClass("active-step");
                $('li span.circle-4').removeClass("active-circle");
            });
            $(document).on('click', '.selectize-1 div.selectize-input.focus', function (e) {
                $('li.asl-1').removeClass("active-step");
                $('li span.circle-1').removeClass("active-circle");
                $('li.asl-2').addClass("active-step");
                $('li span.circle-2').addClass("active-circle");
                $('li.asl-3').removeClass("active-step");
                $('li span.circle-3').removeClass("active-circle");
                $('li.asl-4').removeClass("active-step");
                $('li span.circle-4').removeClass("active-circle");
            });
            $(document).on('click', '.selectize-2 div.selectize-input.focus', function (e) {
                $('li.asl-1').removeClass("active-step");
                $('li span.circle-1').removeClass("active-circle");
                $('li.asl-2').removeClass("active-step");
                $('li span.circle-2').removeClass("active-circle");
                $('li.asl-3').removeClass("active-step");
                $('li span.circle-3').removeClass("active-circle");
                $('li.asl-4').addClass("active-step");
                $('li span.circle-4').addClass("active-circle");
            });
            $('#AttachmentName').focus(function () {
                $('li.asl-1').addClass("active-step");
                $('li span.circle-1').addClass("active-circle");
                $('li.asl-2').removeClass("active-step");
                $('li span.circle-2').removeClass("active-circle");
                $('li.asl-3').removeClass("active-step");
                $('li span.circle-3').removeClass("active-circle");
                $('li.asl-4').removeClass("active-step");
                $('li span.circle-4').removeClass("active-circle");
            });
        });
    </script>
    <script>
        function Validation1() {
            var ID = $("#attachmentID").val();
            var name = $("#AttachmentName").val();
            $("#attachment-validation").hide().html('');
            $('#name-validation').html('');
            $("#attachment-submit").prop('disabled', false);

            if (name.length > 0) {
                $("#required-name").addClass("required-color");
                $('li').find('span.circle-1').text("✓");
                $('li').find('span.circle-1').addClass("complete-circle");
            }
            else {
                $("#required-name").removeClass("required-color");
                $('li').find('span.circle-1').text("1");
                $('li').find('span.circle-1').removeClass("complete-circle");
            }

            $.ajax({
                url: '/Template/AttachmentNameValidation',
                type: "POST",
                dataType: "JSON",
                data: { name: name },
                success: function (result) {
                    var id = result.Id;
                    var description = result.AttachmentName;
                    if (ID != id && description.toLowerCase() == name.toLowerCase()) {
                        $("#attachment-validation").fadeIn(200).html('&emsp;&nbsp;Warning: attachment name already exists.');
                        $('#name-validation').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span>Attachment name already exists!');
                        $("#attachment-submit").prop('disabled', true);
                        event.preventDefault();
                    }
                },
                error: function (result) {
                }
            });

        }
        function Validation2() {
            var attachment = $("#attachment").val();
            var type = $("#attachment-type").val();
            $("#attachment-type-text").val($("#attachment-type").text());
            $('#type-validation').html('');
            $("#attachment-submit").prop('disabled', false);
            $("#attachment-validation").hide().html('');
            $('#animated-check-circle').hide();
            $('#check-animation').prop('disabled', false);
            $('#check-animation').prop('checked', false);
            $(".file-check-no").hide();

            if (attachment.length > 0 && type.length > 0) {
                if (~attachment.toLowerCase().indexOf(type.toLowerCase())) {
                    if (attachment.length > 0) {
                        $("#required-attachment").addClass("required-color");
                        $("#required-type").addClass("required-color");
                        $('li').find('span.circle-2').text("✓");
                        $('li').find('span.circle-2').addClass("complete-circle");

                        setTimeout(function () { $('#animated-check-circle').toggle(); }, 100);
                        setTimeout(function () { $('#check-animation').prop('checked', true); $('#check-animation').prop('disabled', true); }, 600);
                    }
                    else {
                        $("#required-type").removeClass("required-color");
                        $('li').find('span.circle-2').text("2");
                        $('li').find('span.circle-2').removeClass("complete-circle");
                    }
                }
                else {
                    $("#attachment-validation").fadeIn(200).html('&emsp;&nbsp;Warning: attachment type does not match file extension.');
                    $("#attachment-submit").prop('disabled', true);
                    $(".file-check-no").fadeIn(200);
                    event.preventDefault();
                }
            }
            else if (type.length > 0) {
                $("#required-type").addClass("required-color");
                $('li').find('span.circle-2').text("✓");
                $('li').find('span.circle-2').addClass("complete-circle");
            }
            else {
                $("#required-type").removeClass("required-color");
                $('li').find('span.circle-2').text("2");
                $('li').find('span.circle-2').removeClass("complete-circle");
            }

        }
        function Validation3() {
            var attachment = $("#file").val();
            var type = $("#attachment-type").val();
            $('#file-validation').html('');
            $("#attachment-submit").prop('disabled', false);
            $("#attachment-validation").hide().html('');
            $('#animated-check-circle').hide();
            $('#check-animation').prop('disabled', false);
            $('#check-animation').prop('checked', false);
            $(".file-check-no").hide();

            if (attachment.length > 0 && type.length > 0) {
                if (~attachment.toLowerCase().indexOf(type.toLowerCase())) {
                    if (attachment.length > 0) {
                        $("#required-attachment").addClass("required-color");
                        $("#required-type").addClass("required-color");
                        $('li').find('span.circle-3').text("✓");
                        $('li').find('span.circle-3').addClass("complete-circle");

                        setTimeout(function () { $('#animated-check-circle').toggle(); }, 100);
                        setTimeout(function () { $('#check-animation').prop('checked', true); $('#check-animation').prop('disabled', true); }, 600);
                    }
                    else {
                        $("#required-attachment").removeClass("required-color");
                        $('li').find('span.circle-3').text("3");
                        $('li').find('span.circle-3').removeClass("complete-circle");
                    }
                }
                else {
                    $("#attachment-validation").fadeIn(200).html('&emsp;&nbsp;Warning: attachment type does not match file extension.');
                    $("#attachment-submit").prop('disabled', true);
                    $(".file-check-no").fadeIn(200);
                    event.preventDefault();
                }
            }
            else if (attachment.length > 0) {
                $("#required-attachment").addClass("required-color");
                $('li').find('span.circle-3').text("✓");
                $('li').find('span.circle-3').addClass("complete-circle");
            }
            else {
                $("#required-attachment").removeClass("required-color");
                $('li').find('span.circle-3').text("3");
                $('li').find('span.circle-3').removeClass("complete-circle");
            }
        }
        function Validation4() {
            var program = $("#Program").val();
            $('#program-validation').html('');

            if (program.length > 0) {
                $("#required-program").addClass("required-color");
                $('li').find('span.circle-4').text("✓");
                $('li').find('span.circle-4').addClass("complete-circle");
                $('#program-validation').addClass("hidden");
            }
            else {
                $("#required-program").removeClass("required-color");
                $('li').find('span.circle-4').text("4");
                $('li').find('span.circle-4').removeClass("complete-circle");
                $('#program-validation').removeClass("hidden");
            }
        }
    </script>
    <script>
        function NameCheck() {
            var name = $("#AttachmentName").val();
            if (name == null || name == '') {
                $('#name-validation').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span>Attachment name is required!');
                event.preventDefault();
            }
          }
        function TypeCheck() {
            var value = $("#attachment-type :selected").val();
            if (value == "") {
                $('#type-validation').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span>Attachment type is required!');
                event.preventDefault();
            }
        }
        //function AttachmentCheck() {
        //    var attachment = $("#file").val();
        //    if (attachment == null || attachment == "") {
        //        $('#file-validation').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span>Attachment is required!');
        //        event.preventDefault();
        //    }
        //}
        //function ProgramCheck() {
        //    var value = $("#Program :selected").val();
        //    if (value == null || value == '') {
        //        $('#program-validation').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span>Program is required!');
        //        event.preventDefault();
        //    }
        //}
    </script>
    <script>
        $(function () {
            var validation = $("#validation").val();
            if (validation == "duplicate") {
                $("#attachment-validation").show().html('&emsp;Attachment name already exists!');
            }
        });
    </script>
    <script>
        const attachmentbtn = document.getElementById('file');

        const fileChosen = document.getElementById('file-chosen');

        attachmentbtn.addEventListener('change', function () {
            fileChosen.textContent = this.files[0].name
        })
    </script>
    <script>
        function backKey() {
            localStorage.setItem("back_attachment", Date.now());
        }
        function storageKey() {
            localStorage.setItem("edit_attachment", Date.now());
        }
    </script>
}

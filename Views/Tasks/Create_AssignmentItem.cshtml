@model HaloCareCore.Models.Validation.AssignmentItemTypes
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Create_AssignmentItem";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<style>
    body {
        background-color: #f9f9fc !important;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }

    .error-alert {
        width: 100%;
        margin: 0 auto;
        background-color: rgba(217, 83, 79, 0.1);
        padding: 10px;
        border-left-color: #d9534f !important;
        border: 1px solid transparent;
        border-left-width: 5px;
        border-radius: 3px;
        margin: 0 auto;
        font-family: 'Open Sans', sans-serif;
        font-size: 12px;
        margin: 0 0 5px 0;
        margin-top: -10px;
        margin-bottom: 20px;
    }

        .error-alert span {
            color: #d9534f;
            text-align: center;
        }
</style>
<javascript>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script src="https://www.jqueryscript.net/demo/jQuery-Plugin-For-Sortable-Bootstrap-Tables-Bootstrap-Sortable/Scripts/bootstrap-sortable.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.default.css">
</javascript>

<div class="fullScreen_container zero-padding">

    <!--pageHeader-->
    <nav id="global-nav" class="nav">
        <div class="pull-left title">
            <h1 class="site-title_patientProfile">
                <span><i class="fas fa-list-alt"></i></span>&emsp; Assignment items
            </h1>
        </div>
        <div class="pull-right title">
            <h1 class="site-title_userID pull-right">
                <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
            </h1>
            <h1 class="site-title_userID pull-right">
                @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
                {
                    <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
                }
            </h1>
            <h1 class="site-waffleIcon pull-right">
                <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
            </h1>
        </div>
    </nav>
    <!--breadCrumbs-->
    <ul class="breadcrumbs_fullScreens">
        <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
        <li><a href="@Url.Action("Index", "Administration", new {})">Settings</a></li>
        <li><a href="@Url.Action("Index_AssignmentType", "Tasks", new {})">Assignment items</a></li>
        <li><a href="#">Create</a></li>
    </ul>
    <!--navCollection-->
    <div class="navCollection_fullScreens">
        @Html.Partial("_navCollection")
    </div>
    <div style="margin-bottom: 1%"></div>

    <div class="row">
        <h4 class="tableHeading">Create new</h4>
        <hr class="fancyruler">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="hidden-fields">
                <input type="hidden" name="code-validation" id="code-validation" />
                <input type="hidden" name="description-validation" id="description-validation" />
                <input type="hidden" name="error-code" id="error-code" value="@ViewBag.Code" />
                <input type="hidden" name="error-description" id="error-description" value="@ViewBag.Description" />
                <input type="hidden" name="error-codedescription" id="error-codedescription" value="@ViewBag.CodeDescription" />
                <div class="col-md-12"><div id="duplicate-code-notice" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Code already exists!</span></div></div></div>
                <div class="col-md-12"><div id="duplicate-description-notice" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Description already exists!</span></div></div></div>
                <div class="col-md-12"><div id="error-duplicate-both" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Both code and description already exists!</span></div></div></div>
                <div class="col-md-12"><div id="error-duplicate-code" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Code already exists!</span></div></div></div>
                <div class="col-md-12"><div id="error-duplicate-description" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Description already exists!</span></div></div></div>
            </div>
            <div class="form-horizontal editForm">
                <br />
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.assignmentItemType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.assignmentItemType, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckCode();" } })
                        @Html.ValidationMessageFor(model => model.assignmentItemType, "", new { @class = "text-danger", @style = "font-size: 90%; margin-left: 1%" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.itemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.itemDescription, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                        @Html.ValidationMessageFor(model => model.itemDescription, "", new { @class = "text-danger", @style = "font-size: 90%; margin-left: 1%" })
                    </div>
                </div>
                <!--//Hcare-1048 removed due to Hcare-955-->
                <div class="form-group">
                    @Html.LabelFor(model => model.diabetes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.diabetes, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.hiv, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.hiv, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.hypertension, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.hypertension, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.oncology, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.oncology, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.mental, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.mental, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName();" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sourceType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.sourceType, (IEnumerable<SelectListItem>)ViewBag.sourceType, "Select", htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.sourceType, "", new { @class = "text-danger", @style = "font-size: 90%; margin-left: 1%" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.HiddenFor(model => model.requirements, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.requirements, new { htmlAttributes = new { @class = "infoBox_editMember" } })
                        @Html.ValidationMessageFor(model => model.requirements, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="fixed-btn">
                    <input id="submit" type="submit" value="Submit" class="btn create-button" style="width: 15%" /><br />
                    <input type="text" value="Back" class="btn reset-button go_back" />
                </div>
            </div>

        }
    </div>
</div>

@section scripts{
    <script src="~/Scripts/layout-buttons-general.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>
    <script>
        initSelectize();
        function initSelectize() {
            $('#program').selectize({
                persist: true,
                preload: true,
                maxItems: 1,
                delimiter: ',',
                valueField: 'id',
                labelField: 'name',
                searchField: ['name'],
                hideSelected: true,
                plugins: ['remove_button'],
                render: {
                    option: function (item, escape) {
                        return '<span class="name">' + escape(item.name) + '</span>';

                    }
                }
            }),
                $('#sourceType').selectize({
                    persist: true,
                    preload: true,
                    maxItems: 1,
                    delimiter: ',',
                    valueField: 'id',
                    labelField: 'name',
                    searchField: ['name'],
                    hideSelected: true,
                    plugins: ['remove_button'],
                    render: {
                        option: function (item, escape) {
                            return '<span class="name">' + escape(item.name) + '</span>';

                        }
                    }
                })
        }
    </script>
    <script>
        function CheckName() {
            var name = $('#itemDescription').val();
            name = name.trim();
            //name = name.replace(/\s+/g, "");

            $("#description-validation").val("");

            //alert(name);
            $.ajax({
                url: '/Tasks/AssignmentItemTypeNameCheck',
                type: "POST",
                dataType: "JSON",
                data: { itemDescription: name },
                success: function (result) {
                    var description = result.itemDescription;
                    if (description.toLowerCase() == name.toLowerCase()) {
                        $("#duplicate-description-notice").removeClass("hidden");
                        $('span[data-valmsg-for="itemDescription"]').html('<span style="font-size: 12px"><i class="fas fa-exclamation-circle"></i> </span>Description already exists!');
                        $("#description-validation").val(description);
                    }
                },
                error: function (result) {
                    $('span[data-valmsg-for="itemDescription"]').html('');
                    $("#duplicate-description-notice").addClass("hidden");
                }
            });
        }
        $("#submit").click(function () {
            if ($("#description-validation").val().length > 0) {
                $("#itemDescription").focus();
                return false;
            }
        });

    </script>
    <script>
        function CheckCode() {
            var code = $('#assignmentItemType').val();
            code = code.trim();
            $("#code-validation").val("");

            $.ajax({
                url: '/Tasks/AssignmentItemTypeCodeCheck',
                type: "POST",
                dataType: "JSON",
                data: { assignmentItemType: code },
                success: function (result) {
                    var cod3 = result.assignmentItemType;
                    if (cod3.toLowerCase() == code.toLowerCase()) {
                        $("#duplicate-code-notice").removeClass("hidden");
                        $('span[data-valmsg-for="assignmentItemType"]').html('<span style="font-size: 12px"><i class="fas fa-exclamation-circle"></i> </span>Code already exists!');
                        $("#code-validation").val(cod3);
                    }
                },
                error: function (result) {
                    $("#duplicate-code-notice").addClass("hidden");
                    $('span[data-valmsg-for="assignmentItemType"]').html('');
                }
            });
        }

        $("#submit").click(function () {
            if ($("#code-validation").val().length > 0) {
                $("#assignmentItemType").focus();
                return false;
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            var c = $('#error-code').val();
            if (c.length > 0) {
                $("#error-duplicate-code").removeClass("hidden");
            }
        });
        $(document).ready(function () {
            var d = $('#error-description').val();
            if (d.length > 0) {
                $("#error-duplicate-description").removeClass("hidden");
            }
        });
        $(document).ready(function () {
            var b = $('#error-codedescription').val();
            if (b.length > 0) {
                $("#error-duplicate-both").removeClass("hidden");
            }
        });
    </script>
}



@model HaloCareCore.Models.ViewModels.PathologySearchVM
@using HaloCareCore.Extensions
@{
    ViewBag.Title = "Pathology search";
    Layout = "~/Views/Shared/_layout-view-x.cshtml";
}

<comment>
    <!--
        HCare-815(Pathology report)
        Created a new report as per specification - Dynamic columns based on pathology fields selected. Dropdown menus updated and report can be exported to excel
        Also added the effective dates per pathology field to view (which can be seen when you hover over value) and to the excel export.
        Added a display name column to the pathology field model which will replace what the user is going to see in order to match the pathology field casing.
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .textbox-control-date {
        display: block !important;
        max-width: 600px !important;
        width: 450px;
        max-height: 100px;
        height: 30px;
        margin-left: 10px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        border-radius: 0px !important;
        border: none !important;
        border-bottom: 1px solid #e8e6e6 !important;
        background-color: transparent !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
    }

    .tooltip-inner {
        width: 120px;
        background: rgba(0,0,0,0.80);
        color: #fff;
        font-size: 10px;
        font-weight: 100;
        text-align: center;
        border-radius: 6px;
        padding: 5px 0;
        z-index: 0;
        -webkit-transition: opacity 0.5s;
        transition: opacity 1.2s;
    }

    .tooltip-arrow {
        border-bottom-color: rgba(0,0,0,0.80) !important;
    }

    /*MULTIPLE Pill for SELECT2*/
    .select2-container--default .select2-selection--multiple {
        display: block !important;
        max-width: 500px !important;
        width: 450px !important;
        max-height: 100px;
        height: auto;
        margin-left: 10px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        border-radius: 0px !important;
        border: none !important;
        border-bottom: 1px solid #e8e6e6 !important;
        background-color: transparent !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
    }

        .select2-container--default .select2-selection--multiple .select2-selection__choice {
            background-color: #0081b3 !important;
            color: white !important;
            border: 1px solid transparent !important;
            border-radius: 5px;
            cursor: default;
            float: left;
            margin-right: 5px;
            margin-top: 0px !important;
            padding: 5px 6px 5px 6px !important;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
            color: white !important;
            cursor: pointer;
            display: inline-block;
            font-weight: bold;
            margin-right: 2px;
        }

    .select2-container--open .select2-dropdown {
        left: 10px !important;
    }
</style>
<javascript>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>

    <script src="https://www.jqueryscript.net/demo/jQuery-Plugin-For-Sortable-Bootstrap-Tables-Bootstrap-Sortable/Scripts/bootstrap-sortable.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>

    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/css/selectize.default.css">
</javascript>

<!----------------------------------------------------------------------------------- form-information -------------------------------------------------------------------------------->
<div class="collapse in">
    <div class="card card-body">
        <div class="collapse-body">
            <div class="search-information-data-panel">
                <!-------------------------------------------------------------------------- bread-crumbs ------------------------------------------------------------------------->
                <ul class="bread-crumbs-full-screen" style="color: #808080 !important;">
                    <li style="font-size: 10px; font-weight: 600">You are here:</li>
                    <li><a href="@Url.Action("Index", "Home" , new { })">Home</a></li>
                    <li><a href="@Url.Action("searchManagement", "PatientManagement" , new { })">Search</a></li>
                    <li><a href="#">@ViewBag.Title</a></li>
                </ul>

                <!------------------------------------------------------------------------- nav-collection ------------------------------------------------------------------------>
                @if (User.Identity.IsAuthenticated)
                {
                    if (User.HasRole("6. Global user") || (User.HasRole("5. Super user")))
                    {
                        <div class="navCollection_fullScreens">
                            <div class="buttonCollection">
                                <div class="col-md-12">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-10">
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Index", "Home" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Home"><span style="font-size: 12px" class="sub_icon fas fa-home"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("OpenAssignments", "Clinical" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Assignments"><span style="font-size: 12px" class="sub_icon fas fa-bell"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Search", "Member" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Patient"><span style="font-size: 12px" class="sub_icon fas fa-user-circle"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("OutstandingAuthorise", "Scripts" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Authorisation"><span style="font-size: 12px" class="sub_icon fas fa-check-circle"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("searchManagement", "patientManagement" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Search"><span style="font-size: 12px" class="sub_icon fas fa-search"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Index", "Administration" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Settings"><span style="font-size: 12px" class="sub_icon fas fa-cog"></span></a>
                                            </div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4"></div>

                                </div>
                            </div>
                        </div>
                    }
                    else if (User.HasRole("4. Advisor"))
                    {
                        <div class="navCollection_fullScreens">
                            <div class="buttonCollection">
                                <div class="col-md-12">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-10">
                                            <div class="col-md-1"></div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Index", "Home" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Home"><span style="font-size: 12px" class="sub_icon fas fa-home"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("OpenAssignments", "Clinical" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Assignments"><span style="font-size: 12px" class="sub_icon fas fa-bell"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Search", "Member" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Patient"><span style="font-size: 12px" class="sub_icon fas fa-user-circle"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("OutstandingAuthorise", "Scripts" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Authorisation"><span style="font-size: 12px" class="sub_icon fas fa-check-circle"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("searchManagement", "patientManagement" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Search"><span style="font-size: 12px" class="sub_icon fas fa-search"></span></a>
                                            </div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4"></div>

                                </div>
                            </div>
                        </div>
                    }
                    else if (User.HasRole("1. Consultant") || (User.HasRole("2. Case manager") || (User.HasRole("3. Specialist"))))
                    {
                        <div class="navCollection_fullScreens">
                            <div class="buttonCollection">
                                <div class="col-md-12">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-10">
                                            <div class="col-md-2"></div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Index", "Home" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Home"><span style="font-size: 12px" class="sub_icon fas fa-home"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("OpenAssignments", "Clinical" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Assignments"><span style="font-size: 12px" class="sub_icon fas fa-bell"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("Search", "Member" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Patient"><span style="font-size: 12px" class="sub_icon fas fa-user-circle"></span></a>
                                            </div>
                                            <div class="col-md-2">
                                                <a href="@Url.Action("searchManagement", "patientManagement" , new { })" style="border-bottom: 1px solid rgba(255, 255, 255, 0.05)" title="Search"><span style="font-size: 12px" class="sub_icon fas fa-search"></span></a>
                                            </div>
                                            <div class="col-md-2"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4"></div>

                                </div>
                            </div>
                        </div>
                    }
                }

                <!---------------------------------------------------------------------------- filter ---------------------------------------------------------------------------->
                <span class="pull-right filter-button" type="button" title="filter" onclick="SearchFilter()"><span class="fas fa-filter"></span></span>
                <div id="filter" class="collapse in">
                    <h4 class="table-heading">Search filter</h4>
                    <hr class="fancyruler">
                    @using (Html.BeginForm("PathologySearch", "PatientManagement", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal form-layout">
                            <br />
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-3 new-form-control">
                                            @Html.Label(null,"Medical scheme:", htmlAttributes: new { @class = "new-form-control" })
                                        </div>
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(m => m.SelectedMedicalAids, new SelectList(Model.MedicalAids, "MedicalAidID", "Name"), "Select", new { @class = "multiple", @required = "required", @onchange = "FillProgram()" })
                                            @Html.ValidationMessageFor(model => model.SelectedMedicalAids, "", new { @class = "text-danger", @style = "font-size: 75%;margin-left: 2%" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-3 new-form-control">
                                            @Html.Label(null,"From date:", htmlAttributes: new { @class = "new-form-control" })
                                        </div>
                                        <div class="col-md-9">
                                            <input class="text-box single-line input-validation-error textbox-control-date" data-val="true" data-val-date="The field must be a date." id="FromDate" name="FromDate" type="date" min="@DateTime.Now.ToString("1900-01-01")" max="@DateTime.Now.ToString("yyyy-MM-dd")" aria-required="true" aria-describedby="DOB-error" aria-invalid="true">
                                            @Html.ValidationMessage("FromDate", "", new { @class = "text-danger", @style = "font-size: 98%; margin-left: 1.5%" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-3 new-form-control">
                                            @Html.Label(null,"Program:", htmlAttributes: new { @class = "new-form-control" })
                                        </div>
                                        <div class="col-md-9">
                                            @Html.DropDownList("SelectedPrograms", new SelectList(Enumerable.Empty<SelectListItem>(), "code", "ProgramName"), "Select", new { @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-3 new-form-control">
                                            @Html.Label(null,"To date:", htmlAttributes: new { @class = "new-form-control" })
                                        </div>
                                        <div class="col-md-9">
                                            <input class="text-box single-line input-validation-error textbox-control-date" data-val="true" data-val-date="The field must be a date." id="ToDate" name="ToDate" type="date" min="" max="@DateTime.Now.ToString("yyyy-MM-dd")" aria-required="true" aria-describedby="DOB-error" aria-invalid="true">
                                            @Html.ValidationMessage("ToDate", "", new { @class = "text-danger", @style = "font-size: 98%; margin-left: 1.5%" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-3 new-form-control">
                                            @Html.Label(null,"Pathology field:", htmlAttributes: new { @class = "new-form-control" })
                                        </div>
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(m => m.SelectedPathologyFields, new SelectList(Model.PathologyFieldsList, "DisplayName", "DisplayName"), "Select", new { @required = "required" })
                                            @Html.ValidationMessageFor(model => model.SelectedPathologyFields, "", new { @class = "text-danger", @style = "font-size: 75%;margin-left: 2%" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="actionButton" style="text-align: center">
                                <input id="submit" type="submit" value="Search" class="btn submit-button" style="width: 15%!important" onclick="FCheck();" /><br />
                                <input type="text" value="Reset filter" class="reset-button" style="width: 15%!important" onclick="Reset();" />
                            </div>
                        </div>
                    }
                </div>

                <!----------------------------------------------------------------------------- table ----------------------------------------------------------------------------->
                @if (ViewBag.displayFields == null)
                { }
                else if (Model.PathologySearches.Count > 0)
                {
                    <br />
                    <br />
                    @*<div class="col-md-12 row">
                            @if (Model.SelectedPathologyFields != null)
                            {
                                <span class="pathology-search-result">
                                    Filters:
                                    @foreach (var item in Model.SelectedPathologyFields)
                                    {
                                        if (!String.IsNullOrEmpty(item.ToString()))
                                        {
                                            <p1 class="search-bubble">@item</p1>
                                        }
                                    }
                                </span>
                            }
                        </div>*@
                    <div class="col-md-12 row">
                        <div class="col-md-6">
                            <div class="page-heading">Pathology results</div>
                        </div>
                        <!--------------------------------------------------------------------------- jq-search -------------------------------------------------------------------------->
                        <div class="col-md-6 row">
                            <div class="col-md-6">
                                <!-------------------------------------------------------------------------- excel export -------------------------------------------------------------------------->
                                @using (Html.BeginForm("ExportPathologyToExcel", "PatientManagement", FormMethod.Post))
                                {
                                    @Html.HiddenFor(mi => mi.SelectedMedicalAids)
                                    @Html.HiddenFor(mi => mi.SelectedPrograms)
                                    @Html.HiddenFor(mi => mi.SelectedPathologyFields)
                                    <input type="text" name="medicalaids" id="medicalaids" value="@TempData["medicalaids"].ToString()" hidden />
                                    <input type="text" name="programs" id="programs" value="@TempData["programs"].ToString()" hidden />
                                    <input type="text" name="pathologyfields" id="pathologyfields" value="@TempData["pathologyfields"].ToString()" hidden />
                                    <input type="text" name="fromdate" id="fromdate" value="@TempData["fromdate"].ToString()" hidden />
                                    <input type="text" name="todate" id="todate" value="@TempData["todate"].ToString()" hidden />

                                    <div class="form-group">
                                        <input class="export-excel-icon" type="image" src="~/Content/Images/_2020/icons/microsoft-excel.png" title="export to excel" alt="Submit">
                                    </div>
                                }
                            </div>
                            <div class="col-md-6">
                                <div class="input-wrapper-new-search">
                                    <input type="text" class="form-control-new-search" id="pTable" onkeyup="myFunction()" placeholder="Search..." />
                                </div>
                            </div>
                        </div>
                    </div>
                    <table class="table pathology-search-table sortable" id="pTable">
                        <thead>
                            <tr>
                                <th onclick="pTable(0)">@Html.DisplayNameFor(mi => mi.PathologySearch.MedicalAidScheme) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(1)">@Html.DisplayNameFor(mi => mi.PathologySearch.MembershipNumber) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(2)">@Html.DisplayNameFor(mi => mi.PathologySearch.DependantCode) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(3)">@Html.DisplayNameFor(mi => mi.PathologySearch.FirstName) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(4)">@Html.DisplayNameFor(mi => mi.PathologySearch.LastName) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(5)">@Html.DisplayNameFor(mi => mi.PathologySearch.PathologyLab) <i class="fa fa-fw fa-sort"></i></th>
                                <th onclick="pTable(6)">@Html.DisplayNameFor(mi => mi.PathologySearch.CreatedBy) <i class="fa fa-fw fa-sort"></i></th>
                                @foreach (var item in Model.SelectedPathologyFields)
                                {
                                    <th>
                                        @Html.DisplayFor(modelItem => item)
                                    </th>
                                }
                            </tr>
                        </thead>
                        @foreach (var item in Model.PathologySearches)
                        {
                            <tbody id="pathology-filter" class="tooltip-div">
                                <tr ondblclick="location.href='@Url.Action("MemberFileView", "Member", new { DependentID = item.DependantID }, null)'">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MedicalAidScheme)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MembershipNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DependantCode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FirstName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LastName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PathologyLab)
                                    </td>
                                    <td title="" data-placement="bottom" data-toggle="tooltip" data-original-title="Created: @Html.DisplayFor(modelItem => item.CreatedDate)">
                                        @Html.DisplayFor(modelItem => item.CreatedBy)
                                    </td>
                                    @foreach (var field in Model.SelectedPathologyFields)
                                    {
                                        if ((item.GetType().GetProperty(field.Replace(" ", "")).GetValue(item)) != null)
                                        {
                                            <td title="" data-placement="bottom" data-toggle="tooltip" data-original-title="Effective: @(Convert.ToDateTime(item.GetType().GetProperty(field.Replace(" ","") + "EffectiveDate").GetValue(item)).ToString("dd-MM-yyyy"))">
                                                @(item.GetType().GetProperty(field.Replace(" ", "")).GetValue(item))
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                    }
                                </tr>
                            </tbody>
                        }
                    </table>
                }
                else
                {
                    <div class="no-records-authorisation">
                        <img src="~/Content/Images/_2020/tables/noRecords.png" />
                    </div>
                    <h4 class="noResultsFound">No results found</h4>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/bundles/jqueryval"></script>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.1/js/standalone/selectize.js"></script>
    <!-- selectize dropdown menus -->
    <script>
        initSelectize();
        function initSelectize() {
            $('#SelectedMedicalAids').selectize({
                persist: true,
                preload: true,
                maxItems: 1,
                delimiter: ',',
                valueField: 'id',
                labelField: 'name',
                searchField: ['name'],
                //create: true,
                hideSelected: true,
                plugins: ['remove_button'],
                render: {
                    option: function (item, escape) {
                        return '<span class="name">' + escape(item.name) + '</span>';

                    }
                }
            }),
                //$('#SelectedPrograms').selectize({
                //    persist: true,
                //    preload: true,
                //    maxItems: 10,
                //    delimiter: ',',
                //    valueField: 'id',
                //    labelField: 'name',
                //    searchField: ['name'],
                //    //create: true,
                //    hideSelected: true,
                //    plugins: ['remove_button'],
                //    render: {
                //        option: function (item, escape) {
                //            return '<span class="name">' + escape(item.name) + '</span>';

                //        }
                //    }
                //}),
                $('#SelectedPathologyFields').selectize({
                    persist: true,
                    preload: true,
                    maxItems: 6,
                    delimiter: ',',
                    valueField: 'id',
                    labelField: 'name',
                    searchField: ['name'],
                    //create: true,
                    hideSelected: true,
                    plugins: ['remove_button'],
                    render: {
                        option: function (item, escape) {
                            return '<span class="name">' + escape(item.name) + '</span>';

                        }
                    }
                });
        }
    </script>
    <!-- filter reset -->
    <script>
        function Reset() {
            $("#SelectedMedicalAids")[0].selectize.clear();
            $('#SelectedPrograms').val(null).trigger('change');
            $("#SelectedPathologyFields")[0].selectize.clear();
            $("#FromDate").val("");
            $("#ToDate").val("");
        }

        function FCheck() {
            var value = $("#SelectedMedicalAids :selected").val();
            if (value == null || value == '') {
                alert("Medical scheme is required!");
                return false;
            }
            var count = $("#SelectedPrograms :selected").length;
            if (count == 0) {
                alert("Program field is required!");
                return false;
            }
            var count = $("#SelectedPathologyFields :selected").length;
            if (count == 0) {
                alert("Pathology field is required!");
                return false;
            }
        }


    </script>
    <!-- return of selected fields into dropdown after post -->
    <script>
        $("#SelectedMedicalAids")[0].selectize.clear();
        var ma_array = $('#medicalaids').val().split(",");
        for (var i = 0; i < ma_array.length; i++) {
            $("#SelectedMedicalAids")[0].selectize.addItem(ma_array[i]);
        }
        $("#SelectedPrograms")[0].selectize.clear();
        var pr_array = $('#programs').val().split(",");
        for (var i = 0; i < pr_array.length; i++) {
            $("#SelectedPrograms")[0].selectize.addItem(pr_array[i]);
        }
        $("#SelectedPathologyFields")[0].selectize.clear();
        var pf_array = $('#pathologyfields').val().split(",");
        for (var i = 0; i < pf_array.length; i++) {
            $("#SelectedPathologyFields")[0].selectize.addItem(pf_array[i]);
        }

        var fromDate = new Date($('#fromdate').val());
        fromDate.setDate(fromDate.getDate() + 1);
        document.querySelector("#FromDate").valueAsDate = fromDate;

        var toDate = new Date($('#todate').val());
        toDate.setDate(toDate.getDate() + 1);
        document.querySelector("#ToDate").valueAsDate = toDate;
    </script>
    <!-- date-validation -->
    <script type="text/javascript" language="javascript">
        function CompareDate() {
            var today = new Date();
            day = today.getDate();
            month = today.getMonth() + 1;
            year = today.getFullYear();
            //alert([day, month, year].join('-'));
            var todate = new Date($('#ToDate').val());
            day = todate.getDate();
            month = todate.getMonth() + 1;
            year = todate.getFullYear();
            //alert([day, month, year].join('-'));
            if (todate > today) {
                var toDate = new Date($('#todate').val());
                toDate.setDate(toDate.getDate());
                document.querySelector("#ToDate").valueAsDate = toDate;
            }

        }
        CompareDate();
    </script>
    <!-- date-validation -->
    <script>
        document.getElementById("FromDate").onchange = function () {
            var input = document.getElementById("ToDate");
            input.setAttribute("min", this.value);
        }
    </script>
    <!-- max alert for pathology fields -->
    <script>
        $("#SelectedPathologyFields").change(function () {
            var count = $("#SelectedPathologyFields :selected").length;
            if (count == 6) {
                alert("Warning: Maximum fields allowed: " + count);
            }
        });
    </script>
    <!-- page-redirect -->
    <script>
        $(document).ready(function () {
            $(".addContact").on("click", function () {
                localStorage.setItem("addContact", "clicked");
            });
        });
    </script>
    <!-- jquery-table-search -->
    <script>
        $(document).ready(function () {
            $("#pTable").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#pathology-filter tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
    <!-- jquery-table-search -->
    <script>
        function pTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("pTable");
            switching = true;
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.getElementsByTagName("TR");

                for (i = 1; i < (rows.length - 1); i++) {

                    shouldSwitch = false;

                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>

    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
    <!-- tooltip -->
    <script>
        $('.tooltip-div').tooltip({
            selector: "[data-toggle=tooltip]",
            container: "body"
        });
    </script>
    <!-- collapse -->
    <script>
        var len = @Model.PathologySearches.Count;
        if (len > 0) {
            $('#filter').removeClass("in")
        }

        function SearchFilter() {
            $('#filter').toggleClass("in")
        }
    </script>
    <!-- medical-scheme-ajax -->
    <script>
        function FillProgram() {
            var medicalaid = $('#SelectedMedicalAids').val();
            $.ajax({
                url: '/Member/FillProgram',
                type: "GET",
                dataType: "JSON",
                data: { medId: medicalaid },
                success: function (options) {
                    $("#SelectedPrograms").html(""); // clear before appending new list
                    $.each(options, function (i, option) {
                        $("#SelectedPrograms").append(
                            $('<option></option>').val(option.code).html(option.ProgramName));
                    });
                }
            });
        }
    </script>
    <!-- select-dropdown -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script>
        $(document).ready(function () { $("#SelectedPrograms").select2({ multiple: true, placeholder: "Select", allowClear: true }); });
    </script>

}

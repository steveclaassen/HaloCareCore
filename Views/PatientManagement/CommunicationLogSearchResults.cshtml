@model HaloCareCore.Models.ViewModels.CommunicationLogResultsVM
@{
    ViewBag.Title = "CommunicationLogSearchResults";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<style>
    body {
        background-color: #f9f9fc !important;
    }

    table.dataTable td.dataTables_empty, table.dataTable th.dataTables_empty {
        text-align: center !important;
    }


    table {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed;
    }

    td {
        border: 1px solid #333;
        width: 100%;
    }
</style>
<style>
    .hide {
        display: none;
    }

    .myDIV:hover + .hide {
        display: block;
        color: red;
    }
</style>

<!--dateSort_JQ-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js"></script>
<script src="https://www.jqueryscript.net/demo/jQuery-Plugin-For-Sortable-Bootstrap-Tables-Bootstrap-Sortable/Scripts/bootstrap-sortable.js"></script>

<div class="fullScreen_container zero-padding">
    <!--pageHeader-->
    <nav id="global-nav" class="nav">
        <div class="pull-left title">
            <h1 class="site-title_patientProfile">
                <span><i class="fas fa-search"></i>&emsp; Search</span>
            </h1>
        </div>
        <div class="pull-right title">
            <h1 class="site-title_userID pull-right">
                <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
            </h1>
            <h1 class="site-title_userID pull-right">
                @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
                {
                    <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
                }
            </h1>
            <h1 class="site-waffleIcon pull-right">
                <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
            </h1>
        </div>
    </nav>

    <!--breadCrumbs-->
    <ul class="breadcrumbs_fullScreens">
        <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
        <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
        <li><a href="#">Search</a></li>
    </ul>

    <!--navCollection-->
    <div class="navCollection_fullScreens">
        @Html.Partial("_navCollection")
    </div>

    <div style="margin-bottom: 2.2%"></div>

    <h4 class="tableHeading" style="margin-bottom: 0%">Search results</h4>

    <!--jQ_Search-->
    <div class="row tableSearch_advancedSearch">
        <div class="col-md-6 pull-right">
            <ul class="input-group" id="adv-search">

                <ul class="nav navbar-nav navbar-right">
                    <li class="focus">
                        <input type="text" class="form-control-patientSearch" id="search" onkeyup="myFunction()" placeholder="Search..." />
                    </li>
                    <div class="btn-group" role="group">
                        <button type="submit" class="btn btn-search" style="height: 29px"><span class="glyphicon glyphicon-search" aria-hidden="true" title="Search"></span></button>
                    </div>
                </ul>
            </ul>
        </div>
    </div>
    <!--excelExport-->
    @using (Html.BeginForm("ExportCommunicationLog", "PatientManagement", FormMethod.Post))  //HCare-643
    {
        @Html.HiddenFor(x => x.CommunicationLogVM.dateFrom)
        @Html.HiddenFor(x => x.CommunicationLogVM.dateTo)
        @Html.HiddenFor(x => x.CommunicationLogVM.Scheme)
        @Html.HiddenFor(x => x.CommunicationLogVM.TypeOfCommunication)


        <div class="form-group advancedSearchExcel">
            <input type="image" src="~/Content/Images/memberProfile/patientProfile/excel.png" title="Export" alt="Submit" style="width: 100%">
        </div>
    }



    <table class="table patient_Table sortable" id="searchTable">
        <thead>
            <tr>
                <th style="width: 9%!important">
                    @Html.DisplayName("Membership number")
                </th>
                <th onclick="searchTable(0)" style="width: 8%!important">
                    @Html.DisplayName("Depandant code")
                </th>
                <th onclick="searchTable(5)" style="width: 5%!important">
                    @Html.DisplayName("ID/Auth #") <i class="fa fa-fw fa-sort"></i>
                <th onclick="searchTable(0)" style="width: 5%!important">
                    @Html.DisplayName("Scheme") <i class="fa fa-fw fa-sort"></i>
                </th>
                <th onclick="searchTable(1)" style="width: 11%!important">
                    @Html.DisplayName("Type of communication") <i class="fa fa-fw fa-sort"></i>
                </th>
                <th onclick="searchTable(2)" style="width: 11%!important">
                    @Html.DisplayName("Description") <i class="fa fa-fw fa-sort"></i>
                </th>
                <th onclick="searchTable(3)" style="width: 20%">
                    @Html.DisplayName("Detail")
                </th>
                <th onclick="searchTable(4)" style="width: 7%!important">
                    @Html.DisplayName("Date sent") <i class="fa fa-fw fa-sort"></i>
                </th>
                <th onclick="searchTable(4)" style="width: 10%!important">
                    @Html.DisplayName("Communication sent to")
                </th>
            </tr>
        </thead>

        @if (Model != null)
        {
            <tbody>
                @foreach (var item in Model.communicationLogVMs)
                {
                    <tr>
                        <td data-dateformat="DD-MM-YYYY">
                            @Html.DisplayFor(modelItem => item.MemberNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DepandantCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProfileNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Scheme)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TypeOfCommunication)
                        </td>
                        <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        @if (item.Detail != null)
                        {
                            <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                @System.Text.RegularExpressions.Regex.Replace(item.Detail, @"<[^>]+>|&nbsp;", "").Trim();
                            </td>

                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Detail)
                            </td>

                        }

                        <td>
                            @Convert.ToDateTime(item.DateSent).ToString("dd/MM/yyyy H:mm")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CommunicationSentTo)
                        </td>
                    </tr>
                }
            </tbody>
        }

    </table>
    <br />
    <br />

    <div class="fixedBack" style="margin-left: 44%">
        <input value="Back" class="btn buttonRound_formBack go_back" style="width: 15%" />
    </div>
    <br />

</div>


@section scripts{
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#searchTable').DataTable({
                "iDisplayLength": 50,
                "lengthMenu": [10, 25, 50, 100, 200],
                "searching": false,
                "ordering": false,
                "info": true,


            });

            var table = $('#searchTable').dataTable();

            $("#btnExport").click(function (e) {

                e.preventDefault();
                window.open('data:application/vnd.ms-excel,' + encodeURIComponent(table[0].outerHTML));

            });



        });
    </script>
    <script>
        var $rows = $('#searchTable tr');
        $('#search').keyup(function () {
            var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

            $rows.show().filter(function () {
                var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                return !~text.indexOf(val);
            }).hide();
        });

        /*tableSorting*/
        function searchTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("searchTable");
            switching = true;
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.getElementsByTagName("TR");

                for (i = 1; i < (rows.length - 1); i++) {

                    shouldSwitch = false;

                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

    </script>
}



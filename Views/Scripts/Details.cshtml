@model HaloCareCore.Models.ScriptCreationViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<style>
    body {
        background-color: #f9f9fc !important;
    }
</style>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/Script.png" style="width: 2.6%" /></span>&emsp; Script detail
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a href="@Url.Action("patientClinical", "Member", new { DependentID = Model.script.dependentID})">Patient</a></li>
            <li><a href="#">Script detail</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.RenderAction("_profileBar_edit", "Member", new { DependentID = Model.script.dependentID })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">

        @using (Html.BeginForm("Details", "Scripts", FormMethod.Post, new { encType = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            if (Model.script.Status == "TBA")
            {
                @Html.HiddenFor(model => model.script.scriptID)
                @Html.HiddenFor(model => model.script.firstLine)
                @Html.HiddenFor(model => model.script.secondLine)
                @Html.HiddenFor(model => model.script.salvageTherapy)
                @Html.HiddenFor(model => model.script.prophylaxis)
                @Html.HiddenFor(model => model.script.resistanceTest)
                @Html.HiddenFor(model => model.script.Status)
                @Html.HiddenFor(model => model.script.dependentID)
            }
            <div>
                <div class="row tablinks">
                    <div class="form-horizontal">
                        <div class="row">
                            <h4 class="tableHeading">Script details</h4>
                            <hr class="fancyruler">
                            <br />
                            <div class="row">
                                <div class="row contentBlock_scriptReference">
                                    <div class="col-md-12 ">
                                        <div class="col-md-12">
                                            <h6 style="color: #003366; font-weight: bold; font-size: 14px">Script reference #: @Html.DisplayFor(model => model.script.scriptID)</h6>
                                            <hr class="fancyruler" />
                                            <div class="scriptRef">
                                                <div class="col-md-6">Script classification: </div>
                                                <div class="col-md-6">@Html.DisplayFor(model => model.script.repeats) </div>
                                                <div class="col-md-6">Effective date: </div>
                                                @if (Model.script.Status == "TBA")
                                                {
                                                    <div class="col-md-6" style="margin-left: -2%!important">@Html.EditorFor(model => model.script.effectiveDate, new { htmlAttributes = new { @class = "infoBox_Enrollment_datepicker", @id = "effectiveDate" } })</div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-6" style="margin-left: -2%!important">@Html.DisplayFor(model => model.script.effectiveDate, new { htmlAttributes = new { @class = "infoBox_Enrollment_datepicker", @id = "effectiveDate" } })</div>
                                                }
                                                <div class="col-md-6">Number of repeats: </div>
                                                <div class="col-md-6">@Html.DisplayFor(model => model.script.repeats)</div>
                                                <div class="col-md-6">Script status: </div>
                                                @if (Model.script.Status == "TBA")
                                                {
                                                    <div class="col-md-6">@Html.EditorFor(model => model.script.active)</div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-6">@Html.DisplayFor(model => model.script.active)</div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                @if (Model.script.Status == "TBA")
                                {
                                    <div class="" style="text-align: center!important">
                                        <input type="submit" class="btn buttonRound_formCreate" style="width: 8%" value="Save" />
                                    </div>
                                }
                                <br />
                                <div class="row">
                                    <table class="table administration_Table" id="scriptTable">
                                        <tr>
                                            <th style="width: 65px" onclick="scriptTable(1)">
                                                @Html.DisplayNameFor(model => model.items[0].nappiCode) <i class="fa fa-fw fa-sort"></i>
                                            </th>
                                            <th style="width: 65px" onclick="scriptTable(0)">
                                                @Html.DisplayNameFor(model => model.items[0].productName) <i class="fa fa-fw fa-sort"></i>
                                            </th>

                                            <th style="width: 80px" onclick="scriptTable(3)">
                                                @Html.DisplayNameFor(model => model.items[0].strength) <i class="fa fa-fw fa-sort"></i>
                                            </th>
                                            <th style="width: 80px" onclick="scriptTable(4)">
                                                @Html.DisplayNameFor(model => model.items[0].quantity) <i class="fa fa-fw fa-sort"></i>
                                            </th>
                                            <th style="width: 80px" onclick="scriptTable(5)">
                                                @Html.DisplayNameFor(model => model.items[0].directions) <i class="fa fa-fw fa-sort"></i>
                                            </th>
                                            <th style="width: 80px" onclick="scriptTable(6)">
                                                @Html.DisplayNameFor(model => model.items[0].itemStatus) <i class="fa fa-fw fa-sort"></i>
                                            </th>
                                            <th style="width: 80px">
                                                @Html.DisplayNameFor(model => model.items[0].fromDate)
                                            </th>
                                            <th style="width: 80px">
                                                @Html.DisplayNameFor(model => model.items[0].toDate)
                                            </th>
                                            <th style="text-align: center!important; width: 80px">
                                                Action
                                            </th>
                                        </tr>
                                        @if (Model.items.Count() == 0)
                                        {
                                            <tr><td colspan="9" style="text-align: center!important">No records available</td></tr>
                                        }
                                        else
                                        {
                                            foreach (var item in Model.items)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.nappiCode)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.productName)
                                                    </td>

                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.strength)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.quantity)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.directions)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.itemStatus)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.fromDate)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.toDate)
                                                    </td>
                                                    <td class="statusCode linkNav" style="text-align: center!important">
                                                        @Html.RenderActionLink("Edit", "EditScriptItem", "Member", new { itemId = item.itemNo, pro = Context.Request.Query["pro"] }, null) |
                                                        @Html.RenderActionLink("Details", "ViewScriptItem", "Member", new { itemId = item.itemNo, pro = Context.Request.Query["pro"] }, null)
                                                    </td>
                                                </tr>
                                            }
                                        }

                                    </table>
                                </div>

                                <div class="detailsdrop">
                                    @if (Model.items.Count != 0)
                                    {
                                        <div class="" style="text-align: center!important">
                                            <a href="@Url.Action("patientClinical", "Member", new { DependentID = Model.script.dependentID,pro = Context.Request.Query["pro"]})" class="btn buttonRound_formBack" style="width: 8%!important; position: relative; margin-right: 0%!important">Back</a>
                                            <input type="button" class="btn AuthoriseButton" style="width: 8%" value="Authorise" onclick="location.href='@Url.Action("AuthoriseScript", "Member", new { scriptID = Model.script.scriptID,pro = Context.Request.Query["pro"] }, null)'" />
                                        </div>
                                    }


                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }

    </div>
</div>



<script src="//code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
<script src="js/jquery.tablesorter.min.js"></script>


<!-- Search -->
@section scripts{
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script>
        /*tableSearch*/
        var $rows = $('#scriptTable tr');
        $('#search').keyup(function () {
            var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

            $rows.show().filter(function () {
                var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                return !~text.indexOf(val);
            }).hide();
        });

        /*tableSorting*/
        function scriptTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("scriptTable");
            switching = true;
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.getElementsByTagName("TR");

                for (i = 1; i < (rows.length - 1); i++) {

                    shouldSwitch = false;

                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

    </script>
}

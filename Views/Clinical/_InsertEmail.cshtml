@*@model HaloCareCore.Models.Communications.Emails*@
@model HaloCareCore.Models.ComsViewModel

@{
    Layout = "~/Views/Shared/_LayoutModal.cshtml";
}

<comment>
    <!-- 26 August 2021 -- hare-1378 -->
    <!-- 26 August 2021 -- hare-1379 -->
    <!-- 26 August 2021 -- hare-1380 -->
</comment>
<style>
    .cke_toolbar_last {
        display: none !important;
    }

    .select2-container--default .select2-selection--single .select2-selection__placeholder {
        color: #ffffff !important;
    }

    .select2-container {
        width: 975px !important;
        margin-left: 0px;
    }

    .select2-container--default .select2-selection--single {
        display: block !important;
        max-width: 1000px !important;
        width: 90% !important;
        max-height: 100px;
        height: auto;
        margin-left: 12px !important;
        padding: 4px 10px !important;
        line-height: 1.428571429;
        color: #003366;
        border-radius: 0px !important;
        border: none !important;
        border-bottom: 1px solid #e8e6e6 !important;
        background-color: transparent !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
    }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            border-radius: 0px !important;
            padding: 2px 8px !important;
            margin-bottom: 1px !important;
            margin-top: -5px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow b {
            margin-left: -98px !important;
            margin-top: -7px !important;
        }

    #email-message {
        display: none;
    }

    .error-alert-email {
        background-color: rgba(217, 48, 78, 0.2);
        padding: 10px 12px 10px 12px;
        border: 1px solid transparent !important;
        border-radius: 0px;
        font: 100 12px 'Open Sans', sans-serif;
        color: rgb(217, 48, 78);
        margin: 0 0 0 0;
        margin-top: 0px;
        margin-bottom: 0px;
        margin-left: -10px;
        width: 102%;
        vertical-align: middle;
    }

        .error-alert-email span a {
            color: rgb(217, 48, 78);
            margin-top: -5px;
        }

    .email-control-new {
        display: block;
        max-width: 1000px !important;
        width: 95% !important;
        max-height: 100px;
        height: 30px;
        margin-top: 5px;
        margin-left: 0px;
        padding: 5px 8px;
        line-height: 1.428571429;
        color: #505050;
        border-radius: 0px;
        border: none;
        border-bottom: 1px solid #e8e6e6;
        background-color: transparent !important;
        font-family: 'Century Gothic' !important;
    }
</style>

<div id="attachment-overlay" class="attachment-overlay"></div>
<div class="email-assignment-modal">
    @using (Ajax.BeginForm("_InsertEmail", "Clinical", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPath", OnSuccess = "hideModal(); alert('Saved');" }, new { id = "email-assignment" }))
    {
        @Html.AntiForgeryToken()

        <div class="col-md-12">
            <button type="button" class="email-close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <div class="new-email-panel">
                <div class="hidden-fields">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.emailMessages.dependantID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("taskId", (object)ViewBag.task)
                    @Html.Hidden("id", (object)ViewBag.id)
                    @Html.Hidden("pro", (object)ViewBag.pro)
                    <input id="e-dependantid" name="e-dependantid" value="@ViewBag.DependantID" hidden />
                    <input id="e-programid" name="e-programid" value="@ViewBag.ProgramID" hidden />
                    <input id="e-medicalaidid" name="e-medicalaidid" value="@ViewBag.MedicalAidID" hidden />
                    <input id="e-userid" name="e-userid" value="@ViewBag.UserID" hidden />
                    <input id="e-member-name" name="e-member-name" value="@ViewBag.MemberName" hidden />
                </div>

                <div class="form-horizontal">

                    <div class="form-group" style="margin-bottom: 0">
                        <div class="col-md-12">
                            <table class="table ne-table">
                                <tr>
                                    <td style="width: 8%; text-align: right!important">To</td>
                                    <td style="width: 2%"><span id="email-validation-error"></span></td>
                                    <td style="width: 85%">
                                        @Html.TextBoxFor(model => model.emailMessages.emailTo, htmlAttributes: new { @class = "email-control-new", @required = "required", @onblur = "ValidateEmail()" })
                                    </td>
                                    <td style="width: 2%"></td>
                                </tr>
                                <tr>
                                    <td style="width: 8%; text-align: right !important">Cc</td>
                                    <td style="width: 2%"></td>
                                    <td>
                                        @Html.TextBoxFor(model => model.emailMessages.cc, htmlAttributes: new { @class = "email-control-new", @placeholder = "CC" })
                                    </td>
                                    <td style="width: 2%"></td>
                                </tr>
                                <tr>
                                    <td style="width: 8%; text-align: right!important">Subject</td>
                                    <td style="width: 2%"></td>
                                    <td>
                                        @Html.TextBox("Subject", (object)ViewBag.schemeSubject + " Disease Management: Member # " + (object)ViewBag.MemberNo + " Dep " + (object)ViewBag.Dep + " " + (object)ViewBag.Intial + " " + (object)ViewBag.Surname, htmlAttributes: new { @class = "email-control-new", @disabled = "disabled", @id = "@model.emailMessages.subject" })
                                        @Html.TextBoxFor(m => m.emailMessages.subject, new { @Value = "HaloCare Disease Management: Member # " + (object)ViewBag.MemberNo + " Dep " + (object)ViewBag.Dep + " " + (object)ViewBag.Intial + " " + (object)ViewBag.Surname, @type = "hidden" })
                                    </td>
                                    <td style="width: 2%"></td>
                                </tr>
                                <tr>
                                    <td style="width: 8%; text-align: right!important">Template</td>
                                    <td style="width: 2%"><span id="template-validation-error"></span></td>
                                    <td>
                                        <select id="email-template" name="email-template" class="form-control select2" onchange="EmailTemplate()" required>
                                            <option subtext="" selected="selected" disabled>Select</option>
                                            @foreach (var item in ViewBag.emailTemplate)
                                            {
                                                <option value="@item.Value" subtext=" ">@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td style="width: 2%"></td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <div id="email-message" class="form-group">
                        <div class="col-md-12" style="width: 100%!important">
                            @Html.TextAreaFor(model => model.emailMessages.emailMassage, htmlAttributes: new { @class = "emailTemplate_Bodys", @id = "emailMessage" })
                            @Html.HiddenFor(model => model.emailMessages.emailMassage, htmlAttributes: new { @class = "textMessage_messageBox" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="email-attachment-header">Attachments <span>&nbsp;<input type="button" value="Add" class="email-attachment-button-one" /></span></div>
                        <span class="ea-placeholder">Select a file to upload. &emsp;<input type="button" value="Add" class="email-attachment-button-two" /></span>
                        <div class="email-attachments">
                            <table class="table ea-table" id="attachment-table-1">
                                <tr class="hidden"><td style="width: 5%"></td><td style="width: 85%"></td><td style="width: 10%"></td></tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div id="validation-email-error" class="error-alert-email hidden" style="margin-top: 5px"></div>
            <div id="validation-error" class="error-alert-email hidden" style="margin-top: 5px"></div>
        </div>

        <div class="col-md-12 email-info-panel">@ViewBag.MedicalAid • @ViewBag.Program</div>

            <div class="col-md-12 new-email-pop-footer">
                <button type="submit" class="popup-button hidden" id="email-send">Send</button>
                <button type="button" class="popup-button" id="email-button">Send</button>
            </div>

    }
</div>
<div id="email-attachment-popup" class="popup-box">
    <div class="col-md-12">
        <button type="button" class="popup-close"><span aria-hidden="true">&times;</span></button>
        <div class="popup-scheme">Email</div>
        <div class="popup-title">Attachments</div>
        <hr class="settings-ruler" />
        <div class="popup-template">
            @if (Model.AttachmentTemplates.Count() > 0)
            {
                <table class="table mh-table table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AttachmentTemplates[0].FileName)</th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.AttachmentTemplates)
                    {
                        <tbody>
                            <tr>
                                <td class="attachment-icon">
                                    <input type="checkbox" id="attachment-@item.Id" class="check-box-attachment" name="attachments" value="@item.Id" />
                                    <label for="attachment-@item.Id" class="attachment-row"><i class="far fa-circle" id="check-@item.Id"></i> &nbsp; @item.AttachmentName</label>
                                </td>
                            </tr>
                        </tbody>
                    }
                </table>
            }
            else
            {
                <div class="no-results-1">
                    <img src="~/Content/Images/_2020/tables/no-results-3.png" />
                </div>
                <h4 class="no-results-attachments">Attachments for account have not been set up.<br />Please contact your administrator.</h4>
            }
        </div>
    </div>

    <div class="col-md-12 popup-info-panel">@ViewBag.MedicalAid • @ViewBag.Program</div>

    @if (Model.AttachmentTemplates.Count() > 0)
    {
        <div class="col-md-12 popup-footer">
            <button class="popup-button" id="popup-close-btn">Submit</button>
        </div>
    }
    else
    {
        <div class="col-md-12 popup-footer">
            <button class="popup-button" id="popup-close-btn">Close</button>
        </div>
    }
</div>

@section Scripts {
    <script src="~/bundles/jqueryval"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () { $("#emailTemplate").select2({ multiple: false, placeholder: "Select", allowClear: false }); });
    </script>
    <script>
        $(function () {
            $(".select2").select2({ matcher: matchCustom, templateResult: formatCustom });
        })

        function stringMatch(term, candidate) {
            return candidate && candidate.toLowerCase().indexOf(term.toLowerCase()) >= 0;
        }

        function matchCustom(params, data) {
            // If there are no search terms, return all of the data
            if ($.trim(params.term) === '') {
                return data;
            }
            // Do not display the item if there is no 'text' property
            if (typeof data.text === 'undefined') {
                return null;
            }
            // Match text of option
            if (stringMatch(params.term, data.text)) {
                return data;
            }
            // Match attribute "data-foo" of option
            if (stringMatch(params.term, $(data.element).attr('subtext'))) {
                return data;
            }
            // Return `null` if the term should not be displayed
            return null;
        }

        function formatCustom(state) {
            return $(
                '<div><div>' + state.text + '</div><div class="subtext">'
                + $(state.element).attr('subtext')
                + '</div></div>'
            );
        }
    </script>
    <script>
        $(".email-attachment-button-one").click(function () {
            $("#attachment-overlay").fadeIn(150);
            $("#email-attachment-popup").fadeIn(250);
        });
        $(".email-attachment-button-two").click(function () {
            $("#attachment-overlay").fadeIn(150);
            $("#email-attachment-popup").fadeIn(250);
        });

        $("#popup-close-btn").click(function () {
            $("#attachment-overlay").fadeOut(150);
            $("#email-attachment-popup").fadeOut(250);
        });

        $(".popup-close").click(function () {
            $("#attachment-overlay").fadeOut(150);
            $("#email-attachment-popup").fadeOut(250);
        });
    </script>
    <script>
        $(document).on('change', 'input[name="attachments"]', function () {
            var templateid = $(this).val();
            var dependantid = $('#e-dependantid').val();
            var programid = $('#e-programid').val();

            if (this.checked) {
                $('.ea-placeholder').hide();
                $('#check-' + templateid).removeClass('far fa-circle').addClass('fas fa-check-circle').css({ "color": "rgb(172 209 175 / 0.80)" });
                $('.email-attachment-button-one').show();
                $('.email-attachment-button-two').hide();

                $.ajax({
                    url: '/Member/EmailAttachmentHistoryInsert',
                    type: "POST",
                    dataType: "JSON",
                    data: { templateid: templateid, dependantid: dependantid, programid: programid, status: true },
                    success: function (result) {
                        $.ajax({
                            url: '/Member/EmailAttachmentHistoryDetails',
                            type: "POST",
                            dataType: "JSON",
                            data: { templateid: templateid },
                            success: function (result) {
                                var data = {};
                                data.d = [
                                    { FileName: result.FileName, AttachmentName: result.AttachmentName, Extension: result.AttachmentExtension }];
                                var html = '';
                                for (var i = 0; i < data.d.length; i++)
                                    if (data.d[i].Extension == '.docx') {
                                        html += '<tr id="' + result.Id + '"><td id="word-icon" style="width: 5%"></td> <td style="width: 85%">' + data.d[i].AttachmentName + '</td > <td style="width: 10%"><input type="checkbox" name="remove-btn" id="remove-word" value="' + result.Id + '"><label for="remove-word" onclick="remove()" style="margin-bottom: 0px"><i class="fas fa-times-circle delete-attachment"></i ></lable></td ></tr > ';
                                    }
                                    else if (data.d[i].Extension == '.xlsx') {
                                        html += '<tr id="' + result.Id + '"><td id="excel-icon" style="width: 5%"></td> <td style="width: 85%">' + data.d[i].AttachmentName + '<td style="width: 10%"><input type="checkbox" name="remove-btn" id="remove-excel" value="' + result.Id + '"><label for="remove-excel" onclick="remove()" style="margin-bottom: 0px"><i class="fas fa-times-circle delete-attachment"></i ></lable></td ></tr > ';
                                    }
                                    else if (data.d[i].Extension == '.pdf') {
                                        html += '<tr id="' + result.Id + '"><td id="pdf-icon" style="width: 5%"></td> <td style="width: 85%">' + data.d[i].AttachmentName + '<td style="width: 10%"><input type="checkbox" name="remove-btn" id="remove-pdf" value="' + result.Id + '"><label for="remove-pdf" onclick="remove()" style="margin-bottom: 0px"><i class="fas fa-times-circle delete-attachment"></i ></lable></td ></tr > ';
                                    }
                                    else if (data.d[i].Extension == '.jpg') {
                                        html += '<tr id="' + result.Id + '"><td id="jpg-icon" style="width: 5%"></td> <td style="width: 85%">' + data.d[i].AttachmentName + '<td style="width: 10%"><input type="checkbox" name="remove-btn" id="remove-jpg" value="' + result.Id + '"><label for="remove-jpg" onclick="remove()" style="margin-bottom: 0px"><i class="fas fa-times-circle delete-attachment"></i ></lable></td ></tr > ';
                                    }
                                    else if (data.d[i].Extension == '.txt') {
                                        html += '<tr id="' + result.Id + '"><td id="txt-icon" style="width: 5%"></td> <td style="width: 85%">' + data.d[i].AttachmentName + '<td style="width: 10%"><input type="checkbox" name="remove-btn" id="remove-txt" value="' + result.Id + '"><label for="remove-txt" onclick="remove()" style="margin-bottom: 0px"><i class="fas fa-times-circle delete-attachment"></i ></lable></td ></tr > ';
                                    }

                                $('#attachment-table-1 tr').first().after(html);
                            }
                        });
                    }
                });
            }
            else {
                $('#check-' + templateid).addClass('far fa-circle').removeClass('fas fa-check-circle').css({ "color": "rgb(204 204 204 / 0.80)" });
                $.ajax({
                    url: '/Member/EmailAttachmentHistoryInsert',
                    type: "POST",
                    dataType: "JSON",
                    data: { templateid: templateid, dependantid: dependantid, programid: programid, status: false },
                    success: function (result) {
                        $.ajax({
                            url: '/Member/EmailAttachmentHistoryDetails',
                            type: "POST",
                            dataType: "JSON",
                            data: { templateid: templateid },
                            success: function (result) {
                                $('#attachment-table-1 tr#' + result.Id).remove();
                            }
                        });
                    }
                });
            }
        });
        function remove() {
            $(document).on('change', 'input[name="remove-btn"]', function () {
                var templateid = $(this).val();
                var dependantid = $('#e-dependantid').val();
                var programid = $('#e-programid').val();
                if (this.checked) {
                    $.ajax({
                        url: '/Member/EmailAttachmentHistoryInsert',
                        type: "POST",
                        dataType: "JSON",
                        data: { templateid: templateid, dependantid: dependantid, programid: programid, status: false },
                        success: function (result) {
                            $.ajax({
                                url: '/Member/EmailAttachmentHistoryDetails',
                                type: "POST",
                                dataType: "JSON",
                                data: { templateid: templateid },
                                success: function (result) {
                                    $('#attachment-table-1 tr#' + result.Id).fadeOut();
                                    $('#attachment-' + templateid).prop('checked', false);
                                    $('#check-' + templateid).addClass('far fa-circle').removeClass('fas fa-check-circle').css({ "color": "rgb(204 204 204 / 0.80)" });
                                }
                            });
                        }
                    });
                }
            });
        }
        $(document).on('change', 'input[name="remove-btn"]', function () {
            if ($('input[name="remove-btn"]:checked').length == $('input[name="remove-btn"]').length) {
                $('.email-attachment-button-one').fadeOut(5);
                $('.email-attachment-button-two').fadeIn(10);
                $('.ea-placeholder').fadeIn(10);
            }
        });
    </script>
    <script>
        $(".new-email-button").click(function () {
            $("#email-overlay").fadeIn(150);
            $("#new-email-popup").fadeIn(250);
        });
    </script>
    <script type="text/javascript">
        CKEDITOR.replace('emailMessage', {

            //hcare-1381: toolbar amendment
            toolbar: [
                { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline'] },
                { name: 'clipboard', items: ['Undo', 'Redo'] },
                { name: 'paragraph', items: ['NumberedList', 'BulletedList'] },
                { name: 'hidden', items: ['Image', 'Source', 'NewPage', 'Preview', 'Subscript', 'Superscript', 'TextColor', 'BGColor', '-', 'CopyFormatting', 'RemoveFormat', 'Styles', 'Format', 'Font', 'FontSize', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', 'Table', 'HorizontalRule', 'SpecialChar'] },
            ],

        });

        CKEDITOR.config.removePlugins = 'elementspath,contextmenu,liststyle,tabletools,tableselection'; //hcare-1381
        CKEDITOR.config.disableNativeSpellChecker = false; //hcare-1381

        function EmailTemplate() {
            //hcare-1384
            var templateID = $('#email-template').val();
            var membername = $("#e-member-name").val();

            if (CKEDITOR.instances['emailMessage'].getData() != '') { CKEDITOR.instances['emailMessage'].setData(''); }

            $.ajax({
                url: '/Member/EmailTemplateBuild',
                type: "GET",
                dataType: "JSON",
                data: { templateID: templateID },
                success: function (results) {
                    CKEDITOR.instances['emailMessage'].insertHtml(results.EmailTemplate);
                    CKEDITOR.instances['emailMessage'].setData(CKEDITOR.instances['emailMessage'].getData().replace("[MemberName]", membername));
                }
            });
        }
    </script>
    <script>
        $(document).ready(function () {
            $('#email-send').prop('disabled', true);
            $('#email-template').on("select2:select", function (e) {
                if ($(this).val() > 0) {
                    $('#email-message').show();
                    $('#email-send').prop('disabled', false);
                    $('#email-button').addClass('hidden');
                    $('#email-send').removeClass('hidden');
                    $('#validation-error').html('').addClass("hidden");
                    $('#template-validation-error').html('');
                }
            });
        });
    </script>
    <script>
        function ValidateEmail() {
            if ($('#emailMessages_emailTo').val() == "" || $('#emailMessages_emailTo').val() == null) {
                $('#email-validation-error').html('<span style="font-size: 8px; color: darkred;vertical-align: middle"><i class="fas fa-exclamation-triangle"></i></span>');
                $('#validation-email-error').removeClass("hidden").html('&emsp;<span style="font-size: 8px;vertical-align: middle"> <i class="fas fa-exclamation-triangle"></i></span> <b>Invalid:</b> Email address is required.');
                $('#email-send').prop('disabled', true);
            }
            else {
                $('#email-validation-error').html('');
                $('#validation-email-error').html('').addClass("hidden");
                $('#email-send').prop('disabled', false);
            }
        }

        $(function () {
            $('#emailMessages_emailTo').on('change mouseup mousedown mouseout keydown keyup', function () {
                if ($('#emailMessages_emailTo').val() == "" || $('#emailMessages_emailTo').val() == null) {
                    $('#email-validation-error').html('<span style="font-size: 8px; color: darkred;vertical-align: middle"><i class="fas fa-exclamation-triangle"></i></span>');
                    $('#validation-email-error').removeClass("hidden").html('&emsp;<span style="font-size: 8px;vertical-align: middle"> <i class="fas fa-exclamation-triangle"></i></span> <b>Invalid:</b> Email address is required.');
                    $('#email-send').prop('disabled', true);
                }
                else {
                    $('#email-validation-error').html('');
                    $('#validation-email-error').html('').addClass("hidden");
                    $('#email-send').prop('disabled', false);
                }
            });
        });

        $(document).ready(function () {
            $('#email-send').click(function () {
                if ($('#emailMessages_emailTo').length() == 0) {
                    $('#email-validation-error').html('<span style="font-size: 8px; color: darkred;vertical-align: middle"><i class="fas fa-exclamation-triangle"></i></span>');
                    $('#validation-email-error').removeClass("hidden").html('&emsp;<span style="font-size: 8px;vertical-align: middle"> <i class="fas fa-exclamation-triangle"></i></span> <b>Invalid:</b> Email address is required.');
                    $('#emailMessages_emailTo').focus();
                }
            });

            $(".email-close").click(function () {
                $("#email-overlay").fadeOut(150);
                $("#new-email-popup").fadeOut(250);
            });

            $('#email-button').click(function () {
                if ($('#email-template select2:select').val() == null) {
                    $('#template-validation-error').html('<span style="font-size: 8px; color: darkred;vertical-align: middle"><i class="fas fa-exclamation-triangle"></i></span>');
                    $('#validation-error').removeClass("hidden").html('&emsp;<span style="font-size: 8px;vertical-align: middle"> <i class="fas fa-exclamation-triangle"></i></span> <b>Invalid:</b> Please select a template from the dropdown menu.');
                }
            });
        });
    </script>
    <script>
        //disable-submit-button
        $('#email-assignment').submit(function () {
            $('#email-send').prop('disabled', true);
        });
    </script>

}

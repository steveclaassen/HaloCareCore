@model HaloCareCore.Models.Communications.Queries

@{
    ViewBag.Title = "EditQuery";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}



<style>
    .container {
        margin: auto;
        display: block;
        max-width: 1600px !important;
        width: 1400px !important;
    }
    /*breadCrumbs*/

    ul.breadcrumb {
        padding: 10px 16px;
        list-style: none;
        background-color: transparent;
    }

        ul.breadcrumb li {
            display: inline;
            font-size: 10px;
        }

            ul.breadcrumb li + li:before {
                padding: 8px;
                color: #808080;
                font-size: 10px;
                content: "/\00a0";
            }

            ul.breadcrumb li a {
                color: #808080;
                text-decoration: none;
                font-size: 10px;
            }

                ul.breadcrumb li a:hover {
                    color: #eea236;
                }

    * {
        color: #003366;
    }



    .fullWidth_table {
        max-width: 1600px;
        width: 1300px !important;
        margin: auto;
        margin-bottom: 2% !important;
        font-size: 10px;
    }

    .backButton_image img {
        margin-left: 2% !important;
    }
</style>

<div class="container zero-padding">

    <!--breadCrumbs-->
    <ul class="breadcrumb" style="margin-top: -2.2%; margin-bottom: 3%; position: fixed; z-index: 5">
        <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
        <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
        <li><a class="go_back" style="cursor: pointer">Enquiries</a></li>
        <li><a href="#">Edit</a></li>
    </ul>
    <!--breadCrumbs-->
    <!--FAB-->
    <div class="zoom">
        <a class="zoom-fab zoom-btn-md zoom-btn-white" id="zoomBtn"><i class="glyphicon glyphicon-th-large" style="font-size: 12px; color: ghostwhite"></i></a>
        <ul class="zoom-menu">
            <li><a href="@Url.Action("Index", "Home", new { })" class="zoom-fab zoom-btn-sm zoom-btn-white scale-transition scale-out"><i class="fa fa-home" style="font-size: 14px; color: ghostwhite"></i></a></li>
            <li><a href="@Url.Action("Index", "Administration", new { })" class="zoom-fab zoom-btn-sm zoom-btn-white scale-transition scale-out" title="Settings"><i class="fa fa-gear" style="font-size: 14px; color: ghostwhite"></i></a></li>
            <li><a href="javascript:;" class="zoom-fab zoom-btn-sm zoom-btn-white scale-transition scale-out" title="Add Member"><i class="fa fa-plus" style="font-size: 14px; color: ghostwhite"></i></a></li>
            <li><a href="@Url.Action("searchManagement", "patientManagement", new { })" class="zoom-fab zoom-btn-sm zoom-btn-white scale-transition scale-out" title="Advanced Search"><i class="fa fa-search" style="font-size: 14px; color: ghostwhite"></i></a></li>
        </ul>
    </div>
    <!--FAB_End-->
    <!--pageHeader-->
    <div class="container zero-padding">
        <div class="topBar_reports img-responsive">
            <h2>Enquiries</h2>
            <img src="~/Content/Images/memberProfile/topBar Icons/Enquiries.png" style="width: 3%; margin-top: -0.2%;" />
            <img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" style="width: 8%; float: right; margin-right: 100px; margin-top: 3px" />
        </div>
    </div>
    <!--profileInformation-->

    <div class="container" style="margin-top: -2%; margin-left: -7%">
        @Html.Action("_ProfileInformation", "Member", new { DependentID = Model.dependentID })
    </div>

    <div style="margin-bottom: 8%"></div>

    <!--profileInformation-->
    <!--pageHeader-->

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="contentBlock_pathology">

                <h4 style="color: #003366; margin-top: 0%; margin-left: 2%; margin-bottom: 0%!important; font-size: 25px; font-family: 'Century Gothic'; font-weight: 400; font-style: normal;">Edit an Enquiry</h4>
                <hr class="fancyruler">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.queryID)
                @Html.HiddenFor(model => model.dependentID)

                <div class="form-group">
                    @Html.LabelFor(model => model.query, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="margin-top: -20px; margin-left: 252px">
                        @Html.DisplayFor(model => model.query, new { htmlAttributes = new { @class = "infoBox_Enrollment" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.querySolution, htmlAttributes: new { @class = "control-label col-md-2 lift" })
                    <div class="col-md-10 enquiryBlock_messageBox">
                        @Html.TextAreaFor(model => model.querySolution, new { htmlAttributes = new { @class = "enquiryBlock_messageBox" } })
                        @Html.ValidationMessageFor(model => model.querySolution, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.priority, htmlAttributes: new { @class = "control-label col-md-2 lift" })
                    <div class="col-md-10" style="margin-top: -1%">
                        @Html.EditorFor(model => model.priority, new { htmlAttributes = new { @class = "infoBox_Enrollment" } })
                        @Html.ValidationMessageFor(model => model.priority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2 lift" })
                    <div class="col-md-10 enquiryBlock_messageBox">
                        @Html.TextAreaFor(model => model.comment, new { htmlAttributes = new { @class = "enquiryBlock_messageBox" } })
                        @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <br />

                <div class="form-group">
                    <div class="actionButton" style="margin-left: 48%">
                        <input type="submit" value="Save" class="btn buttonRound_scriptAdd" style="width: 15%!important" />
                    </div>
                </div>

            </div>
        </div>
    }

</div>
<div class="backButton">
    <a class="go_back" style="left: 15px;bottom: 10px; position: fixed; padding: 2px 2px 2px 2px; z-index: 5">
        Back
    </a>
</div>



<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section scripts{
    <script src="~/bundles/jqueryval"></script>
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script>
        var $rows = $('#table tr');
        $('#search').keyup(function () {
            var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

            $rows.show().filter(function () {
                var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                return !~text.indexOf(val);
            }).hide();
        });

        /*tableSorting*/
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("table");
            switching = true;
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.getElementsByTagName("TR");

                for (i = 1; i < (rows.length - 1); i++) {

                    shouldSwitch = false;

                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

    </script>
}

@model HaloCareCore.Models.Management.Allergies
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "EditAllergies";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
        12 June 2019 -- HCare-722 (Change "Follow up" to red on patient history drop-down menus)
        I have added alert badges that draw the users attention to the fields that are either marked with a follow up or that are empty/null.

        06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
        Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.

        03 September 2019 -- HCare-771(Allergy view correction)
        As part of the Create view correction, i've also amended the view to the Edit Allergy view.
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    ::-webkit-input-placeholder { /* Chrome */
        font-family: Comfortaa;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }
</style>

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/Medication_one.png" /></span>&emsp; Allergies
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">

        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">Allergy</a></li>
        </ul>

        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })

        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>

        <!--profileInformation-->
        <div class="profileBar">
            @Html.RenderAction("_profileBar_edit", "Member", new { DependentID = Model.dependantId })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal editForm">
                <h4 class="summaryHeading">Edit Allergy</h4>
                <hr class="fancyruler">
                <br />
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.dependantId)
                @Html.HiddenFor(model => model.programType)

                @if (Model.followUp == true)
                {
                    <div id="warning_anchor">
                        <a id="link" href="#anchor_followUp">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="check box"></i>
                        </a>
                    </div>
                }
                @if (Model.generalComments == "follow up" || Model.generalComments == "Follow up" || Model.generalComments == "Follow Up" || Model.generalComments == "" || Model.generalComments == null)
                {
                    <div id="comment_anchor">
                        <a id="commentLink" href="#anchor_comment">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="comment"></i>
                        </a>
                    </div>
                }

                @if (Model.Allergy == "follow up" || Model.Allergy == "Follow up" || Model.Allergy == "Follow Up")
                {
                    <div id="allergy_anchor">
                        <a id="allergyLink" href="#anchor_allergy">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="allergy"></i>
                        </a>
                    </div>
                }

                <!-- allergy -->
                <div id="anchor_allergy">
                    <div id="warning_allergy" class="hidden">
                        <i class="fas fa-exclamation-circle pulser asterisk-warning-single"></i>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Allergy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Allergy, new { htmlAttributes = new { @class = "form-control-new", @placeholder = "example: Penicillin", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Allergy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- comment -->
                <div id="anchor_clinComment">
                    <div id="warning_comment" class="hidden">
                        <i class="fas fa-exclamation-circle pulser asterisk-warning-single"></i>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.generalComments, new { @placeholder = "comment", @class = "form-control-new" })
                            @Html.ValidationMessageFor(model => model.generalComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- follow-up -->
                <div id="anchor_followUp">
                    @if (Model.followUp == true)
                    {
                        <div id="warning_required_followUp">
                            <i class="fas fa-exclamation-circle pulser asterisk-warning-single"></i>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.followUp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.followUp)
                                @Html.ValidationMessageFor(model => model.followUp, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <!-- active -->
                <div class="form-group">
                    @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.active)
                            @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="fixedBack" style="margin-left: 32%">
                    <input value="Back" class="btn newBackButton go_back" onclick="backKey()" />
                    <input type="submit" value="Save" class="btn newSubmitButton patientClinical" onclick="storageKey()" />
                </div>

            </div>
        }

    </div>

</div>

@section scripts{

    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script>
        $(document).ready(function () {
            setInterval(function () {
                if ($("#Allergy").val() == "" || $("#Allergy").val() == null || $("#Allergy").val().toLowerCase() == "follow up") {
                    $("#warning_allergy").removeClass('hidden');
                }
                else {
                    $("#warning_allergy").addClass('hidden');
                }
            }, 0);
        });

        $(document).ready(function () {
            setInterval(function () {
                if ($("#generalComments").val() == "" || $("#generalComments").val() == null || $("#generalComments").val().toLowerCase() == "follow up") {
                    $("#warning_comment").removeClass('hidden');
                }
                else {
                    $("#warning_comment").addClass('hidden');
                }
            }, 0);
        });

    </script>
    <script>
        //followUp Allergy field
        $(document).ready(function () {
            setInterval(function () {
                $('#followUp').change(function () {
                    if (this.checked)
                        $('#warning_allergy').removeClass('houdini'),
                            $('#warning_anchor').removeClass('houdini');

                    else
                        $('#warning_allergy').addClass('houdini'),
                            $('#warning_anchor').addClass('houdini');


                });
            }, 0);
        });

        //anchor_Allergy
        $("#allergyLink").click(function () {
            $('html, body').animate({
                scrollTop: $("#anchor_allergy").offset().top
            }, 100),

                // toggle highlight for Allergy
                $('#Allergy').toggleClass('highlight');
            setTimeout(function () {
                // toggle back after 1 second
                $('#Allergy').toggleClass('highlight');
            }, 300);
        });

        //anchor_Comment
        $("#commentLink").click(function () {
            $('html, body').animate({
                scrollTop: $("#anchor_comment").offset().top
            }, 250),

                $('#generalComments').toggleClass('textBox_highlight');
            setTimeout(function () {
                // toggle back after 1 second
                $('#generalComments').toggleClass('textBox_highlight');
            }, 300);
        });

        //anchor_FollowUp
        $("#link").click(function () {
            $('html, body').animate({
                scrollTop: $("#anchor_followUp").offset().top
            }, 350);
        });

        //followUp Allergy field
        //$(document).ready(function () {
        //    setInterval(function () {
        //        if ($("#Allergy").val().toLowerCase() == "follow up") {
        //            $("#Allergy").addClass('warningFont'),
        //                $('#allergyWarning').removeClass('houdini'),
        //                $('#allergy_anchor').removeClass('houdini');
        //        }
        //        else if ($("#Allergy").val().toLowerCase() == "") {
        //            $("#Allergy").addClass('warningFont'),
        //                $('#allergyWarning').removeClass('houdini'),
        //                $('#allergy_anchor').removeClass('houdini');
        //        }
        //        else {
        //            $("#Allergy").removeClass('warningFont'),
        //                $('#Allergy').addClass('fontUpdate'),
        //                $('#allergyWarning').addClass('houdini'),
        //                $('#allergy_anchor').addClass('houdini');


        //        }
        //    }, 0);
        //});

        //followUp AllergyComments field
        $(document).ready(function () {
            setInterval(function () {
                if ($("#generalComments").val().toLowerCase() == "follow up") {
                    $("#generalComments").addClass('warningFont'),
                        $('#allergyComment').removeClass('houdini'),
                        $('#comment_anchor').removeClass('houdini');
                }
                else if ($("#generalComments").val().toLowerCase() == "") {
                    $('#allergyComment').removeClass('houdini'),
                        $('#comment_anchor').removeClass('houdini');
                }
                else {
                    $("#generalComments").removeClass('warningFont'),
                        $('#generalComments').addClass('fontUpdate'),
                        $('#allergyComment').addClass('houdini'),
                        $('#comment_anchor').addClass('houdini');


                }
            }, 0);
        });

    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_allergy", Date.now());
        }
        function storageKey() {
            localStorage.setItem("edit_allergy", Date.now());
        }
    </script>
}




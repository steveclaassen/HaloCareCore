@model HaloCareCore.Models.Podiatry
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "podiaty_Edit";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
        12 June 2019 -- HCare-722 (Change "Follow up" to red on patient history drop-down menus)
        I have added alert badges that draw the users attention to the fields that are either marked with a follow up or that are empty/null.

        12 July 2019 -- HCare-753(Add amputation checkbox to front view)
        Added Amputation checkbox to podiatry_Create.cshtml, podiatry_Edit.cshtml, podiatry_Details.cshtml and updated setting Checkbox in Repo

        06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
        Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    textarea#generalComments {
        display: block;
        width: 600px;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-left: -5%;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
        margin-top: -10%;
    }
</style>

<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/podiatry_White.png" /></span>&emsp; Patient podiatry
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">Podiatry</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.Action("_profileBar_edit", "Member", new { DependentID = Model.dependentID })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">

        <h4 class="summaryHeading">Edit podiatry</h4>
        <hr class="fancyruler">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal editForm">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PodiatryID)
                @Html.HiddenFor(model => model.dependentID)
                @Html.HiddenFor(model => model.amputationComment)
                @Html.HiddenFor(model => model.amputationReason)
                @Html.HiddenFor(model => model.podiatryLopsComment)
                @Html.HiddenFor(model => model.podiatryDeformityComment)
                @Html.HiddenFor(model => model.podiatryPerArterialDiseaseComment)
                @Html.HiddenFor(model => model.podiatryWoundComment)
                @Html.HiddenFor(model => model.programType)

                <div id="amputationAnchor">
                    @if (Model.amputationComment == "• Follow up")
                    {
                        <div id="warning_ampComment">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.amputationComment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.amputaionComment_Concat, new List<SelectListItem>
                            {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Left: 1 toe/toon", Value = "• Left: 1 toe/toon"},
                                new SelectListItem() { Text = "• Left: > than 1 toe/> as 1 toon", Value = "• Left: > than 1 toe/> as 1 toon"},
                                new SelectListItem() { Text = "• Left: Foot/Voet", Value = "• Left: Foot/Voet"},
                                new SelectListItem() { Text = "• Left: Below knee/Onder knie", Value = "• Left: Below knee/Onder knie"},
                                new SelectListItem() { Text = "• Left: Above knee/Bo knie", Value = "• Left: Above knee/Bo knie"},

                                new SelectListItem() { Text = "• Right: 1 toe/toon", Value = "• Right: 1 toe/toon"},
                                new SelectListItem() { Text = "• Right: > than 1 toe/> as 1 toon", Value = "• Right: > than 1 toe/> as 1 toon"},
                                new SelectListItem() { Text = "• Right: Foot/Voet", Value = "• Right: Foot/Voet"},
                                new SelectListItem() { Text = "• Right: Below knee/Onder knie", Value = "• Right: Below knee/Onder knie"},
                                new SelectListItem() { Text = "• Right: Above knee/Bo knie", Value = "• Right: Above knee/Bo knie"},

                                new SelectListItem() { Text = "• Other", Value = "• Other"},

                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                }, new { @class = "questionDrop", @id = "amputaionComment_Concat", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                            @Html.ValidationMessageFor(model => model.amputationComment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="amputationReason_anchor">
                    @if (Model.amputationReason == "• Follow up")
                    {
                        <div id="warning_ampReason">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.amputationReason, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.amputaionReason_Concat, new List<SelectListItem>
                            {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Traumatic/Traumatiese", Value = "• Traumatic/Traumatiese"},
                                new SelectListItem() { Text = "• Poor circulation/Swak sirkulasie", Value = "• Poor circulation/Swak sirkulasie"},
                                new SelectListItem() { Text = "• Cancer/Kanker", Value = "• Cancer/Kanker"},
                                new SelectListItem() { Text = "• Infection/Infeksie", Value = "• Infection/Infeksie"},
                                new SelectListItem() { Text = "• Neuroma/Neuroom", Value = "• Neuroma/Neuroom"},
                                new SelectListItem() { Text = "• Frostbite/Bevroren", Value = "• Frostbite/Bevroren"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                }, new { @class = "questionDrop", @id = "amputationReason", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                            @Html.ValidationMessageFor(model => model.amputationReason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="podiatryLopsComment_anchor">
                    @if (Model.podiatryLopsComment == "• Follow up")
                    {
                        <div id="warning_podiatryLops">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.podiatryLopsComment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.podiatryLops_Concat, new List<SelectListItem>
                            {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Prickling and tingling sensation (pins and needles)/Naalde en spelde gevoel", Value = "• Prickling and tingling sensation (pins and needles)/Naalde en spelde gevoel"},
                                new SelectListItem() { Text = "• A loss of sensation or reduced sensation/Verlies of verminderde sensasie", Value = "• A loss of sensation or reduced sensation/Verlies of verminderde sensasie"},
                                new SelectListItem() { Text = "• Burning sensation in the soles of the feet/Brand sensasie van voetsole", Value = "• Burning sensation in the soles of the feet/Brand sensasie van voetsole"},
                                new SelectListItem() { Text = "• Stabbing pain or electric-shock sensations/Steek pyn of elektriese skok gevoel", Value = "• Stabbing pain or electric-shock sensations/Steek pyn of elektriese skok gevoel"},
                                new SelectListItem() { Text = "• Weakened muscles/Verswakte spiere", Value = "• Weakened muscles/Verswakte spiere"},
                                new SelectListItem() { Text = "• Muscles that becomes smaller/Spiere wat verklein", Value = "• Muscles that becomes smaller/Spiere wat verklein"},
                                new SelectListItem() { Text = "• Poor coordination when walking and poor balance/Swak koördinasie as u loop en swak balans", Value = "• Poor coordination when walking and poor balance/Swak koördinasie as u loop en swak balans"},
                                new SelectListItem() { Text = "• Hypersensitivity of the skin when touched/Hypersensitiwiteit van die vel met aanraking", Value = "• Hypersensitivity of the skin when touched/Hypersensitiwiteit van die vel met aanraking"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},


                                }, new { @class = "questionDrop", @id = "podiatryLopsComment", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                            @Html.ValidationMessageFor(model => model.podiatryLopsComment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="podiatryDeformityComment_anchor">
                    @if (Model.podiatryDeformityComment == "• Follow up")
                    {
                        <div id="warning_deformation">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.podiatryDeformityComment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.podiatryDeformity_Concat, new List<SelectListItem>
                           {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Hammer toe (a toe that is permanently bent over another toe)/Hammertoon (toon wat permanent gebuig staan bokant ander tone)", Value = "• Hammer toe (a toe that is permanently bent over another toe)/Hammertoon (toon wat permanent gebuig staan bokant ander tone)"},
                                new SelectListItem() { Text = "• Bunion/Knokkeltoon", Value = "• Bunion/Knokkeltoon"},
                                new SelectListItem() { Text = "• High foot arch/Hoё voetbrug", Value = "• High foot arch/Hoё voetbrug"},
                                new SelectListItem() { Text = "• Flat feet (low foot arch)/Platvoet (lae voetbrug)", Value = "• Flat feet (low foot arch)/Platvoet (lae voetbrug)"},
                                new SelectListItem() { Text = "• Charcot foot (loss of sensation of the whole foot and the destruction of foot joints with an abnormal flat foot taking shape over time)/Charcot voet (verlies van sensasie van hele voet en vernietiging van voet gewrigte met ‘n abnormale platvoet wat vorm mettertyd)", Value = "• Charcot foot (loss of sensation of the whole foot and the destruction of foot joints with an abnormal flat foot taking shape over time)/Charcot voet (verlies van sensasie van hele voet en vernietiging van voet gewrigte met ‘n abnormale platvoet wat vorm mettertyd)"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                }, new { @class = "questionDrop", @id = "podiatryDeformityComment", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                            @Html.ValidationMessageFor(model => model.podiatryDeformityComment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="podiatryPerArterialDiseaseComment_anchor">
                    @if (Model.podiatryPerArterialDiseaseComment == "• Follow up")
                    {
                        <div id="warning_perArtDisease">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.podiatryPerArterialDiseaseComment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.PerArterialDisease_Concat, new List<SelectListItem>
                           {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Leg pain/cramping that occurs while walking (intermittent claudication)/Bene wat pyn/kramp wanneer u loop (afwisselende kloudikasie)", Value = "• Leg pain/cramping that occurs while walking (intermittent claudication)/Bene wat pyn/kramp wanneer u loop (afwisselende kloudikasie)"},
                                new SelectListItem() { Text = "• Leg pain/cramping that occurs while lying down (rest pain)/Bene wat pyn/kramp wanneer u lê", Value = "• Leg pain/cramping that occurs while lying down (rest pain)/Bene wat pyn/kramp wanneer u lê"},
                                new SelectListItem() { Text = "• Weakend leg/Lam verswakte been", Value = "• Weakend leg/Lam verswakte been"},
                                new SelectListItem() { Text = "• Cold legs or feet (colder than other limbs)/Koue bene of voete (koeler as wat ander ledemate is)", Value = "• Cold legs or feet (colder than other limbs)/Koue bene of voete (koeler as wat ander ledemate is)"},
                                new SelectListItem() { Text = "• Sores that will not heal/Sere wat nie gesond wil word nie", Value = "• Sores that will not heal/Sere wat nie gesond wil word nie"},
                                new SelectListItem() { Text = "• Discoloration of legs (pale or blue)/Bene wat verkleur het (bleek of blou)", Value = "• Discoloration of legs (pale or blue)/Bene wat verkleur het (bleek of blou)"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},


                                }, new { @class = "questionDrop", @id = "podiatryPerArterialDiseaseComment", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                            @Html.ValidationMessageFor(model => model.podiatryPerArterialDiseaseComment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="podiatryPerArterialDiseaseAffectedLeg_anchor">
                    @if (Model.podiatryPerArterialDiseaseAffectedLeg == "• Follow up")
                    {
                        <div id="warning_affectedLeg">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.podiatryPerArterialDiseaseAffectedLeg, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.podiatryPerArterialDiseaseAffectedLeg, new List<SelectListItem>
                           {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Right leg/Regterbeen", Value = "• Right leg/Regterbeen"},
                                new SelectListItem() { Text = "• Left leg/Linkerbeen", Value = "• Left leg/Linkerbeen"},
                                new SelectListItem() { Text = "• Both/Beide", Value = "• Both/Beide"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                }, "Select", new { @class = "questionDrop", @id = "podWound", @style = "max-width: 800px!important; width: 600px; margin-left: 1%" })

                            @Html.ValidationMessageFor(model => model.podiatryPerArterialDiseaseAffectedLeg, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="podiatryWoundComment_anchor">
                    @if (Model.podiatryWoundComment == "• Follow up")
                    {
                        <div id="warning_podiatryWound">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    @if (Model.podiatryWoundComment != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.podiatryWoundComment, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.ListBoxFor(model => model.podiatryWound_Concat, new List<SelectListItem>
                               {
                                    new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                    new SelectListItem() { Text = "• Wound on a lower limb without infection/Wond op 'n onderste ledemaat sonder infeksie", Value = "• Wound on a lower limb without infection/Wond op 'n onderste ledemaat sonder infeksie"},
                                    new SelectListItem() { Text = "• Wound on lower limb with infection/Wond op die onderste ledemaat met infeksie", Value = "• Wound on lower limb with infection/Wond op die onderste ledemaat met infeksie"},
                                    new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                    new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                    }, new { @class = "questionDrop", @id = "podiatryWoundComment", @multiple = "multiple", @style = "max-width: 800px!important; width: 600px; margin-left: 1%;overflow-x: scroll;", @required = "required" })

                                @Html.ValidationMessageFor(model => model.podiatryWoundComment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>

                <div id="podiatryWoundAffectedLeg_anchor">
                    @if (Model.podiatryWoundAffectedLeg == "• Follow up")
                    {
                        <div id="warning_woundAffectedLeg">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.podiatryWoundAffectedLeg, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.podiatryWoundAffectedLeg, new List<SelectListItem>
                           {
                                new SelectListItem() { Text = "• None/Geen", Value = "• None/Geen"},
                                new SelectListItem() { Text = "• Left leg/Linkerbeen", Value = "• Left leg/Linkerbeen"},
                                new SelectListItem() { Text = "• Right leg/Regterbeen", Value = "• Right leg/Regterbeen"},
                                new SelectListItem() { Text = "• Both/Beide", Value = "• Both/Beide"},
                                new SelectListItem() { Text = "• Follow up", Value = "• Follow up"},
                                new SelectListItem() { Text = "• N/A", Value = "• N/A"},

                                }, "Select", new { @class = "questionDrop", @id = "podWound", @style = "max-width: 800px!important; width: 600px; margin-left: 1%" })

                            @Html.ValidationMessageFor(model => model.podiatryWoundAffectedLeg, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WoundInfection, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.WoundInfection, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "Yes", Value = "Yes"},
                            new SelectListItem() { Text = "No", Value = "No"},

                            }, "Select", new { @class = "questionDrop", @id = "podWound", @style = "max-width: 800px!important; width: 600px; margin-left: 1%" })

                        @Html.ValidationMessageFor(model => model.WoundInfection, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div id="comment_anchor">
                    @if (Model.generalComments == "" || Model.generalComments == "Follow up" || Model.generalComments == "Follow Up" || Model.generalComments == "follow up" || Model.generalComments == "FOLLOW UP" || Model.generalComments == null)
                    {
                        <div id="warning_comment">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.TextAreaFor(model => model.generalComments)
                                @Html.ValidationMessageFor(model => model.generalComments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div id="followUp_anchor">
                    @if (Model.followUp == true)
                    {
                        <div id="warning_followUp">
                            <i class="fas fa-exclamation-triangle pulse followUp_warning"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.followUp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.followUp)
                                @Html.ValidationMessageFor(model => model.followUp, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Amputation", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.amputationCheck)
                            @Html.ValidationMessageFor(model => model.amputationCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.active)
                            @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="fixedBack" style="margin-left: 40%">
                        <input value="Back" class="btn buttonRound_formBack go_back" onclick="backKey()" style="width: 15%!important" />
                        <input type="submit" value="Save" class="btn buttonRound_formCreate" onclick="storageKey()" style="width: 15%" />
                    </div>
                </div>

            </div>
        }

    </div>
</div>

@section Scripts {
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <!-- general -->
    <script>
        //date-picker
        $(function () {

            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
            });
        });

    </script>
    <!-- follow-up-alerts -->
    <script>
        //followUp field
        $(document).ready(function () {
            setInterval(function () {
                $('#followUp').change(function () {
                    if (this.checked)
                        $('#warning_followUp').removeClass('houdini');

                    else
                        $('#warning_followUp').addClass('houdini');


                });
            }, 0);
        });

        //followUp ampComment field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='amputaionComment_Concat']").val() == "• Follow up") {
                    $('#warning_ampComment').removeClass('hidden');
                }
                else {
                    $('#warning_ampComment').addClass('hidden');
                }
            }, 0);
        });

        //followUp ampReason field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='amputaionReason_Concat']").val() == "• Follow up") {
                    $('#warning_ampReason').removeClass('hidden');
                }
                else {
                    $('#warning_ampReason').addClass('hidden');
                }
            }, 0);
        });

        //followUp LopsComment field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryLops_Concat']").val() == "• Follow up") {
                    $('#warning_podiatryLops').removeClass('hidden');
                }
                else {
                    $('#warning_podiatryLops').addClass('hidden');
                }
            }, 0);
        });

        //followUp Deformation field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryDeformity_Concat']").val() == "• Follow up") {
                    $('#warning_deformation').removeClass('hidden');
                }
                else {
                    $('#warning_deformation').addClass('hidden');
                }
            }, 0);
        });

        //followUp peripheral arterial disease field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='PerArterialDisease_Concat']").val() == "• Follow up") {
                    $('#warning_perArtDisease').removeClass('hidden');
                }
                else {
                    $('#warning_perArtDisease').addClass('hidden');
                }
            }, 0);
        });

        //followUp affectedLeg field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryPerArterialDiseaseAffectedLeg']").val() == "• Follow up") {
                    $('#warning_affectedLeg').removeClass('hidden');
                }
                else {
                    $('#warning_affectedLeg').addClass('hidden');
                }
            }, 0);
        });

        //followUp podiatryWound field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryWound_Concat']").val() == "• Follow up") {
                    $('#warning_podiatryWound').removeClass('hidden');
                }
                else {
                    $('#warning_podiatryWound').addClass('hidden');
                }
            }, 0);
        });

        //followUp podiatryWound field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryWound_Concat']").val() == "• Follow up") {
                    $('#warning_podiatryWound').removeClass('hidden');
                }
                else {
                    $('#warning_podiatryWound').addClass('hidden');
                }
            }, 0);
        });

        //followUp affectedLeg field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='podiatryWoundAffectedLeg']").val() == "• Follow up") {
                    $('#warning_woundAffectedLeg').removeClass('hidden');
                }
                else {
                    $('#warning_woundAffectedLeg').addClass('hidden');
                }
            }, 0);
        });

        //followUp Comments field
        $(document).ready(function () {
            setInterval(function () {
                if ($("#generalComments").val().toLowerCase() == "follow up") {
                    $("#generalComments").addClass('warningFont'),
                        $('#generalComments').removeClass('houdini'),
                        $('#warning_comment').removeClass('houdini');
                }
                else if ($("#generalComments").val().toLowerCase() == "") {
                    $('#generalComments').removeClass('houdini'),
                        $('#warning_comment').removeClass('houdini');
                }
                else {
                    $("#generalComments").removeClass('warningFont'),
                        $('#generalComments').addClass('fontUpdate'),
                        $('#generalComments').addClass('houdini'),
                        $('#warning_comment').addClass('houdini');

                }
            }, 0);
        });

    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_podiatry_diabetes", Date.now());
        }
        function storageKey() {
            localStorage.setItem("edit_podiatry_diabetes", Date.now());
        }
    </script>
}

@model HaloCareCore.Models.Patient.Pathology
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "EditPathology";
    Layout = "~/Views/Shared/_LayoutMember.cshtml";
}

<comment>
    <!--
            02 April 2019 -- HCare-674 (Pathology effective dates addition (Related to HCare-603))
            Effective dates have been added to pathology fields for reporting purposes as per a request from Madelein. I have added the effective dates for each pathology category and updated the frontend view for the
            CreatePathology.cshtml, PathologyDetails.cshtml and EditPathology.cshtml views. I have also set the new fields to allow the "Main" effective date to set all the fields to the same date but a user is able to individually
            update the dates for each effective date in the view as well.
            Back end code for Create Pathology and Edit Pathology has been adjusted to also ignore the effective date field should the primary field not have a value. ie. If the CD4 Count is blank, when a user submits the form,
            the CD4CountEffectiveDate will be set to NULL as there is no value in the primary field.

            Additionally, the above has been added to the Capture Pathology Task as well

            17 July 2019 -- HCare-747 (Laboratory Table - Master)
            The laboratory table in the database is linked to the pathology laboratory dropdown list and will allow you to type free text as well when creating pathology entries for the lab.
            Also needed to reconfigure the alerts due to the new dropdown. I have set up the table that you can create and edit the labs and this will allow users to view, create and edit in the pathology section as well

            13 September 2019 -- HCare-772 (Pathology data - Mandatory dates)
            Amendment to the initial ticket (telephone conversation with Mercia and Margo - Margo asked me to do this - verbal) -- If the pathology field is populated with a value, the date field associated with that field is changed to required. If for example the Haemoglobin field is populated with a value and the Effective date underneath it is removed by the user. The form will NOT submit and show the user
            the required fields. This has been applied to the Create and Edit Pathology view when adding pathology from profile as well as in the InsertPathology Task.
            A further amendement is to ensure that the value "0" and "0.00" is ignored and that validation is not required for these values.

            26 September 2019 -- HCare-813 (Future dates pathology)
            Added date limit to the datepickers in the edit pathology view.

            01 June 2020 -- HCare-1050(Error: Region settings)
            The region settings have been reset which has affected all decimal separators. I have updated the controllers where this the error has appeared namely the Questionnaires(height+weight) and the Pathology(insert+update), by adding an invariant culture decimal parse to the decimal inputs in the controllers affected.
            Also added a Culture thread to the Home controller which has corrected the views where a decimal has been placed. The culture is using the decimal point instead of the comma as a decimal separator.

            02 July 2020 -- HCare-1079(Pathology name changes)
            2Updated the headings to read from the pathology model
        -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    .text-divider {
        margin: 1em 0;
        line-height: 0;
        text-align: center;
    }

        .text-divider span {
            background-color: rgba(254, 254, 254, 1);
            padding: 1em;
        }

        .text-divider:before {
            content: " ";
            display: block;
            border-top: 1px solid rgba(204, 204, 204, 0.50);
            border-bottom: 1px solid transparent;
            width: 96%;
            margin-left: 0%;
        }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }

    textarea#comment {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        max-width: 1200px !important;
        height: 120px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366 !important;
        border: 1px solid #ede9e9;
        border-radius: 2px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-size: 100%;
        font-weight: 100;
        resize: none !important;
        margin-top: 10px;
        text-align: left
    }

    .select2-container--default .select2-selection--single {
        width: 190px !important;
        height: 34px !important;
        border: 1px solid transparent !important;
    }


        .select2-container--default .select2-selection--single .select2-selection__rendered {
            margin-top: 0px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow b {
            margin-top: -3px !important;
            margin-left: 0px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__placeholder {
            color: white !important;
        }
</style>

<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

<!--pageLoader-->
<div id="loading-screen" class="hidden">
    <div class="container-loader">
        <div></div><div></div><div></div><div></div>
        <span class="loading-text">LOADING...</span>
    </div>
    <div id="loading" class="loading"></div>
</div>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/bloods.png" style="width: 2.8%" /></span>&emsp; Pathology
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a href="@Url.Action("patientClinical", "Member", new {DependentID = Context.Request.Query["DependentID"] })">Patient</a></li>
            <li><a href="#">Pathology</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.RenderAction("_profileBar_edit", "Member", new { DependentID = Model.dependentID })
        </div>
    </div>

    <div class="profilebar-spacer"></div>

    <div class="patientDashboard_container">
        <h4 class="tableHeading">Edit pathology</h4>
        <hr class="fancyruler">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.dependentID)
                    @Html.HiddenFor(model => model.pathologyID)
                </div>
            </div>

            <div class="form-horizontal editForm">
                <div class="row">
                    <div class="form-horizontal">
                        <br />
                        <h4 class="tableDivider-heading text-divider"><span>administration</span></h4>
                        <br />
                        <div class="form-group" style="margin-left: 3%; width: 90%">
                            <div class="col-md-12">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.effectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.effectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.labReferenceNo, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.labReferenceNo, new { htmlAttributes = new { @class = "infoBox_Pathology", data_val = "true" } })
                                        @Html.ValidationMessageFor(model => model.labReferenceNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.labName, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("laboratories", null, "Select", new { @class = "infoBox_Pathology", @required = "required" })
                                        @Html.ValidationMessage("laboratories", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.pathologyType, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("pathologyType", null, "Select", new { @class = "infoBox_Pathology", @required = "required" })
                                        @Html.ValidationMessage("pathologyType", "", new { @class = "text-danger", @style = "margin-left: 2%" })

                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <h4 class="tableDivider-heading text-divider"><span>categories</span></h4>
                        <br />
                        <br />
                        <!--Line 1-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.CD4Count, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.CD4Count, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.CD4Count, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.CD4Percentage, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.CD4Percentage, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.CD4Percentage, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.viralLoad, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.viralLoad, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.viralLoad, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.CD4CounteffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.CD4CounteffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.CD4CounteffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.CD4PercentageeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.CD4PercentageeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.CD4PercentageeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.viralLoadeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.viralLoadeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.viralLoadeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 2-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.haemoglobin, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.haemoglobin, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.haemoglobin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.bilirubin, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.bilirubin, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.bilirubin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.totalCholestrol, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.totalCholestrol, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.totalCholestrol, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.haemoglobineffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.haemoglobineffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.haemoglobineffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.bilirubineffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.bilirubineffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.bilirubineffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.totalCholestroleffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.totalCholestroleffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.totalCholestroleffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 3-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hdl, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.hdl, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.hdl, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ldl, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.ldl, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.ldl, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.triglycerides, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.triglycerides, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.triglycerides, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hdleffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.hdleffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.hdleffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ldleffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.ldleffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.ldleffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.triglycerideseffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.triglycerideseffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.triglycerideseffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 4-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.glucose, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.glucose, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.glucose, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hba1c, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.hba1c, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.hba1c, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.alt, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.alt, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.alt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.glucoseeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.glucoseeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.glucoseeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hba1ceffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.hba1ceffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.hba1ceffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.alteffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.alteffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.alteffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 5-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ast, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.ast, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.ast, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.urea, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.urea, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.urea, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.creatinine, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.creatinine, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.creatinine, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.asteffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.asteffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.asteffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ureaeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.ureaeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.ureaeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.creatinineeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.creatinineeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.creatinineeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 6-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.eGfr, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.eGfr, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.eGfr, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.mauCreatRatio, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.mauCreatRatio, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.mauCreatRatio, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.FEV1, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.FEV1, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.FEV1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.eGfreffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.eGfreffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.eGfreffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.mauCreatRatioeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.mauCreatRatioeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.mauCreatRatioeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.FEV1effectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.FEV1effectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.FEV1effectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 7-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Eosinophylia, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Eosinophylia, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.Eosinophylia, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hivEliza, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.hivEliza, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.hivEliza, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ucreatinine, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.ucreatinine, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.ucreatinine, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.EosinophyliaeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.EosinophyliaeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.EosinophyliaeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.hivElizaeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.hivElizaeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.hivElizaeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ucreatinineeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.ucreatinineeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.ucreatinineeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 8-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.normGtt, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.normGtt, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.normGtt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.abnGtt, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.abnGtt, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.abnGtt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.salbumin, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.salbumin, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.salbumin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.normGtteffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.normGtteffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.normGtteffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.abnGtteffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.abnGtteffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.abnGtteffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.salbumineffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.salbumineffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.salbumineffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 9-->
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ualbuminuria, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.ualbuminuria, new { htmlAttributes = new { @class = "infoBox_Pathology", placeholder = "0.00" } })
                                        @Html.ValidationMessageFor(model => model.ualbuminuria, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important;margin-top: -1.5%">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ualbuminuriaeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.ualbuminuriaeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.ualbuminuriaeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!--Line 10-->
                        <h4 class="tableDivider-heading text-divider"><span>blood pressure</span></h4>
                        <br />
                        <br />
                        <div class="form-group">
                            <div class="col-md-12" style="margin-left: 7.5%!important">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.systolicBP, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.systolicBP, new { htmlAttributes = new { @class = "infoBox_Pathology nodecimal", placeholder = "0", @onblur = "CheckDecimal1();" } })
                                        @Html.ValidationMessageFor(model => model.systolicBP, "", new { @class = "text-danger", @style = "font-size: 75%;" })
                                        <input type="hidden" name="systolicBP-decimal" id="systolicBP-decimal" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.diastolicBP, htmlAttributes: new { @class = "control-label col-md-5 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.diastolicBP, new { htmlAttributes = new { @class = "infoBox_Pathology nodecimal", placeholder = "0", @onblur = "CheckDecimal2();" } })
                                        @Html.ValidationMessageFor(model => model.diastolicBP, "", new { @class = "text-danger", @style = "font-size: 75%;" })
                                        <input type="hidden" name="diastolicBP-decimal" id="diastolicBP-decimal" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.BPeffectiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
                                    <div class="col-md-6">
                                        <!-- Datepicker as text field -->
                                        <div class="input-group date pickerBox">
                                            @Html.TextBoxFor(model => model.BPeffectiveDate, "{0:dd MMM yyyy}", new { @class = "dateBox_Pathology dateLimit" })
                                            @Html.ValidationMessageFor(model => model.BPeffectiveDate, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />

                        <!--Comment-->
                        <h4 class="tableDivider-heading text-divider"><span>comments</span></h4>
                        <div class="form-group">
                            <div class="col-md-12">
                                @*<h2 style="margin-left: 20%; font-family: 'Century Gothic'; font-weight: 200; font-size: 18px; color: #003366">Comments</h2>*@
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.comment, htmlAttributes: new { @class = "" })
                                    @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.HiddenFor(model => model.createdBy, new { htmlAttributes = new { @class = "infoBox_Pathology", @id = "createdBy" } })

                                </div>
                                <div class="col-md-3"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                    </div>
                    <!--Active-->
                    <div class="col-md-12">
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-10">
                            <div class="col-md-8"></div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6" style="margin-top: 2.5%">
                                    @Html.CheckBoxFor(model => model.active)
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <!--Submit-->
                    <div class="">
                        <div class="actionButton" style="margin-bottom: 1%; text-align: center!important">
                            <input type="submit" value="Submit" class="btn questionnaireButton addPathology" id="pathologySubmit" />
                            <br />
                            <input value="Back" class="btn buttonRound_formBack go_back" style="width: 8%!important" />
                        </div>

                    </div>
                    <div class="row"></div>

                </div>
            </div>
        }
    </div>
</div>

@*<div class="labRef_popUp">
        @Html.Raw(TempData["labRefmsg"])
    </div>*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">

    window.onload = function () {
        toastr.options.positionClass = 'toast-bottom-right';
        toastr.options.timeOut = 5000;

        toastr.error("@ViewBag.Message");

    }
    </script>
}

<script src="js/jquery.tablesorter.min.js"></script>
<script src="http://code.jquery.com/jquery.unobtrusive-ajax.min.js"></script>

@section Scripts {
    <script src="~/bundles/jqueryval"></script>
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>

    <!--page-loader-->
    <script>
        $("form").submit(function () {
            if ($(this).valid()) {  //<<< If validation passes
                $("#loading-screen").removeClass("hidden");
            }
        });
    </script>
    <!--Select dropdown-->
    <script>
        $(document).ready(function () { $("#pathologyType").select2({ selectOnClose: true, multiple: false, placeholder: "Select" }); });

        //script that allows you to type your own name into select dropdown menu
        $("#labName").select2({
            selectOnClose: true,
            placeholder: "Select",
            tags: true,
            createTag: function (params) {
                return {
                    id: params.term,
                    text: params.term,
                    newOption: true,
                }
            },
            templateResult: function (data) {
                var $result = $("<span></span>");

                $result.text(data.text);

                if (data.newOption) {
                    $result.append(" <em>(new)</em>");
                }

                return $result;
            }
        });

        $("#laboratories").select2({
            selectOnClose: true,
            placeholder: "Select",
            tags: true,
            createTag: function (params) {
                return {
                    id: params.term,
                    text: params.term,
                    newOption: true,
                }
            },
            templateResult: function (data) {
                var $result = $("<span></span>");

                $result.text(data.text);

                if (data.newOption) {
                    $result.append(" <em>(new)</em>");
                }

                return $result;
            }
        });
    </script>
    <!--General-->
    <script>
        /*Date picker*/
        $(function () {

            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
                endDate: new Date()
            });
        });

    </script>
    <!--Page redirect-->
    <script>
        $(document).ready(function () {
            $(".addPathology").on("click", function () {
                localStorage.setItem("addPathology", "clicked");
            });
        });
    </script>
    <!--Date validation-->
    <script>
        $(document).ready(function () {
            $('#pathologySubmit').mouseover(function () {
                if ($('#CD4Count').val() == '0' || $('#CD4Count').val() == '0.00' || $('#CD4Count').val() == '0.0' || $('#CD4Count').val() == '00') {
                    $("[name='CD4CounteffectiveDate']").attr("required", false);
                }
                else if ($('#CD4Count').val() == '') {
                    $("[name='CD4CounteffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='CD4CounteffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#CD4Percentage').val() == '0' || $('#CD4Percentage').val() == '0.00' || $('#CD4Percentage').val() == '0.0' || $('#CD4Percentage').val() == '00') {
                    $("[name='CD4PercentageeffectiveDate']").attr("required", false);
                }
                else if ($('#CD4Percentage').val() == '') {
                    $("[name='CD4PercentageeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='CD4PercentageeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#viralLoad').val() == '0' || $('#viralLoad').val() == '0.00' || $('#viralLoad').val() == '0.0' || $('#viralLoad').val() == '00') {
                    $("[name='viralLoadeffectiveDate']").attr("required", false);
                }
                else if ($('#viralLoad').val() == '') {
                    $("[name='viralLoadeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='viralLoadeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#haemoglobin').val() == '0' || $('#haemoglobin').val() == '0.00' || $('#haemoglobin').val() == '0.0' || $('#haemoglobin').val() == '00') {
                    $("[name='haemoglobineffectiveDate']").attr("required", false);
                }
                else if ($('#haemoglobin').val() == '') {
                    $("[name='haemoglobineffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='haemoglobineffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#bilirubin').val() == '0' || $('#bilirubin').val() == '0.00' || $('#bilirubin').val() == '0.0' || $('#bilirubin').val() == '00') {
                    $("[name='bilirubineffectiveDate']").attr("required", false);
                }
                else if ($('#bilirubin').val() == '') {
                    $("[name='bilirubineffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='bilirubineffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#totalCholestrol').val() == '0' || $('#totalCholestrol').val() == '0.00' || $('#totalCholestrol').val() == '0.0' || $('#totalCholestrol').val() == '00') {
                    $("[name='totalCholestroleffectiveDate']").attr("required", false);
                }
                else if ($('#totalCholestrol').val() == '') {
                    $("[name='totalCholestroleffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='totalCholestroleffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#hdl').val() == '0' || $('#hdl').val() == '0.00' || $('#hdl').val() == '0.0' || $('#hdl').val() == '00') {
                    $("[name='hdleffectiveDate']").attr("required", false);
                }
                else if ($('#hdl').val() == '') {
                    $("[name='hdleffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='hdleffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#ldl').val() == '0' || $('#ldl').val() == '0.00' || $('#ldl').val() == '0.0' || $('#ldl').val() == '00') {
                    $("[name='ldleffectiveDate']").attr("required", false);
                }
                else if ($('#ldl').val() == '') {
                    $("[name='ldleffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='ldleffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#triglycerides').val() == '0' || $('#triglycerides').val() == '0.00' || $('#triglycerides').val() == '0.0' || $('#triglycerides').val() == '00') {
                    $("[name='triglycerideseffectiveDate']").attr("required", false);
                }
                else if ($('#triglycerides').val() == '') {
                    $("[name='triglycerideseffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='triglycerideseffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#glucose').val() == '0' || $('#glucose').val() == '0.00' || $('#glucose').val() == '0.0' || $('#glucose').val() == '00') {
                    $("[name='glucoseeffectiveDate']").attr("required", false);
                }
                else if ($('#glucose').val() == '') {
                    $("[name='glucoseeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='glucoseeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#hba1c').val() == '0' || $('#hba1c').val() == '0.00' || $('#hba1c').val() == '0.0' || $('#hba1c').val() == '00') {
                    $("[name='hba1ceffectiveDate']").attr("required", false);
                }
                else if ($('#hba1c').val() == '') {
                    $("[name='hba1ceffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='hba1ceffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#alt').val() == '0' || $('#alt').val() == '0.00' || $('#alt').val() == '0.0' || $('#alt').val() == '00') {
                    $("[name='alteffectiveDate']").attr("required", false);
                }
                else if ($('#alt').val() == '') {
                    $("[name='alteffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='alteffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#ast').val() == '0' || $('#ast').val() == '0.00' || $('#ast').val() == '0.0' || $('#ast').val() == '00') {
                    $("[name='asteffectiveDate']").attr("required", false);
                }
                else if ($('#ast').val() == '') {
                    $("[name='asteffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='asteffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#urea').val() == '0' || $('#urea').val() == '0.00' || $('#urea').val() == '0.0' || $('#urea').val() == '00') {
                    $("[name='ureaeffectiveDate']").attr("required", false);
                }
                else if ($('#urea').val() == '') {
                    $("[name='ureaeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='ureaeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#creatinine').val() == '0' || $('#creatinine').val() == '0.00' || $('#creatinine').val() == '0.0' || $('#creatinine').val() == '00') {
                    $("[name='creatinineeffectiveDate']").attr("required", false);
                }
                else if ($('#creatinine').val() == '') {
                    $("[name='creatinineeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='creatinineeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#eGfr').val() == '0' || $('#eGfr').val() == '0.00' || $('#eGfr').val() == '0.0' || $('#eGfr').val() == '00') {
                    $("[name='eGfreffectiveDate']").attr("required", false);
                }
                else if ($('#eGfr').val() == '') {
                    $("[name='eGfreffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='eGfreffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#mauCreatRatio').val() == '0' || $('#mauCreatRatio').val() == '0.00' || $('#mauCreatRatio').val() == '0.0' || $('#mauCreatRatio').val() == '00') {
                    $("[name='mauCreatRatioeffectiveDate']").attr("required", false);
                }
                else if ($('#mauCreatRatio').val() == '') {
                    $("[name='mauCreatRatioeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='mauCreatRatioeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#FEV1').val() == '0' || $('#FEV1').val() == '0.00' || $('#FEV1').val() == '0.0' || $('#FEV1').val() == '00') {
                    $("[name='FEV1effectiveDate']").attr("required", false);
                }
                else if ($('#FEV1').val() == '') {
                    $("[name='FEV1effectiveDate']").attr("required", false);
                }
                else {
                    $("[name='FEV1effectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#Eosinophylia').val() == '0' || $('#Eosinophylia').val() == '0.00' || $('#Eosinophylia').val() == '0.0' || $('#Eosinophylia').val() == '00') {
                    $("[name='EosinophyliaeffectiveDate']").attr("required", false);
                }
                else if ($('#Eosinophylia').val() == '') {
                    $("[name='EosinophyliaeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='EosinophyliaeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#hivEliza').val() == '0' || $('#hivEliza').val() == '0.00' || $('#hivEliza').val() == '0.0' || $('#hivEliza').val() == '00') {
                    $("[name='hivElizaeffectiveDate']").attr("required", false);
                }
                else if ($('#hivEliza').val() == '') {
                    $("[name='hivElizaeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='hivElizaeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#ucreatinine').val() == '0' || $('#ucreatinine').val() == '0.00' || $('#ucreatinine').val() == '0.0' || $('#ucreatinine').val() == '00') {
                    $("[name='ucreatinineeffectiveDate']").attr("required", false);
                }
                else if ($('#ucreatinine').val() == '') {
                    $("[name='ucreatinineeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='ucreatinineeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#normGtt').val() == '0' || $('#normGtt').val() == '0.00' || $('#normGtt').val() == '0.0' || $('#normGtt').val() == '00') {
                    $("[name='normGtteffectiveDate']").attr("required", false);
                }
                else if ($('#normGtt').val() == '') {
                    $("[name='normGtteffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='normGtteffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#abnGtt').val() == '0' || $('#abnGtt').val() == '0.00' || $('#abnGtt').val() == '0.0' || $('#abnGtt').val() == '00') {
                    $("[name='abnGtteffectiveDate']").attr("required", false);
                }
                else if ($('#abnGtt').val() == '') {
                    $("[name='abnGtteffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='abnGtteffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#salbumin').val() == '0' || $('#salbumin').val() == '0.00' || $('#salbumin').val() == '0.0' || $('#salbumin').val() == '00') {
                    $("[name='salbumineffectiveDate']").attr("required", false);
                }
                else if ($('#salbumin').val() == '') {
                    $("[name='salbumineffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='salbumineffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#ualbuminuria').val() == '0' || $('#ualbuminuria').val() == '0.00' || $('#ualbuminuria').val() == '0.0' || $('#ualbuminuria').val() == '00') {
                    $("[name='ualbuminuriaeffectiveDate']").attr("required", false);
                }
                else if ($('#ualbuminuria').val() == '') {
                    $("[name='ualbuminuriaeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='ualbuminuriaeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#systolicBP').val() == '0' || $('#systolicBP').val() == '0.00' || $('#systolicBP').val() == '0.0' || $('#systolicBP').val() == '00') {
                    $("[name='BPeffectiveDate']").attr("required", false);
                }
                else if ($('#systolicBP').val() == '') {
                    $("[name='BPeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='BPeffectiveDate']").attr("required", true);
                }
            });

            $('#pathologySubmit').mouseover(function () {
                if ($('#diastolicBP').val() == '0' || $('#diastolicBP').val() == '0.00' || $('#diastolicBP').val() == '0.0' || $('#diastolicBP').val() == '00') {
                    $("[name='BPeffectiveDate']").attr("required", false);
                }
                else if ($('#diastolicBP').val() == '') {
                    $("[name='BPeffectiveDate']").attr("required", false);
                }
                else {
                    $("[name='BPeffectiveDate']").attr("required", true);
                }
            });


            //$('#pathologySubmit').mouseover(function () {
            //    if ($('#systolicBP').val() == '0' || $('#systolicBP').val() == '0.00') {
            //        $("[name='BPeffectiveDate']").attr("required", false);
            //    }
            //    else if ($('#systolicBP').val() == '') {
            //        $("[name='BPeffectiveDate']").attr("required", false);
            //    }
            //    else {
            //        $("[name='BPeffectiveDate']").attr("required", true);
            //    }
            //});

            //$('#pathologySubmit').mouseover(function () {
            //    if ($('#diastolicBP').val() == '0' || $('#diastolicBP').val() == '0.00') {
            //        $("[name='BPeffectiveDate']").attr("required", false);
            //    }
            //    else if ($('#diastolicBP').val() == '') {
            //        $("[name='BPeffectiveDate']").attr("required", false);
            //    }
            //    else {
            //        $("[name='BPeffectiveDate']").attr("required", true);
            //    }
            //});

        });
    </script>
    <script>
        //HCare-1190
        function CheckDecimal1() {
            var inputtxt = $('#systolicBP').val();
            var decimal = /[^\d].+/;

            if (inputtxt.match(decimal)) {
                $('span[data-valmsg-for="systolicBP"]').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span> Decimal point not allowed!');
                $("#systolicBP-decimal").val(inputtxt);
            }
            else {
                $('span[data-valmsg-for="systolicBP"]').html('');
                $("#systolicBP-decimal").val('');

            }
        }
        function CheckDecimal2() {
            var inputtxt = $('#diastolicBP').val();
            var decimal = /[^\d].+/;

            if (inputtxt.match(decimal)) {
                $('span[data-valmsg-for="diastolicBP"]').html('<span style="font-size: 10px"><i class="fas fa-exclamation-circle"></i> </span> Decimal point not allowed!');
                $("#diastolicBP-decimal").val(inputtxt);
            }
            else {
                $('span[data-valmsg-for="diastolicBP"]').html('');
                $("#diastolicBP-decimal").val('');
            }
        }
        $("#pathologySubmit").click(function () {
            if ($("#diastolicBP-decimal").val().length > 0) {
                $("#diastolicBP").focus();
                return false;
            }
        });
        $("#pathologySubmit").click(function () {
            if ($("#systolicBP-decimal").val().length > 0) {
                $("#systolicBP").focus();
                return false;
            }
        });

    </script>


}


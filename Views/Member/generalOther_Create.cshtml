@model HaloCareCore.Models.Questionnaire.QuestionnaireOther
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Other";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
        06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
        Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.

        01 June 2020 -- HCare-930 (Frail Care General Questionnaire)
        Addition of Frail care questions added to the General questionnaire under the General/Other section. This information has also been added to the Patient Clinical / Patient History section under the "Other" panel.
        The user will also have access to Add, Edit, View the additional information linked to the Frail care question via the Patient Clinical / Patient History section under the "Other" panel.

    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    textarea#generalComments {
        display: block;
        width: 460%;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-left: -5%;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
        margin-top: -10%;
    }

    textarea#frailCareComment {
        display: block;
        width: 460%;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-top: -10%;
        margin-left: 0%;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
    }
</style>

<!---------------------------------------------------------------------- header ---------------------------------------------------------------------->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/clincalHistory.png" /></span>&emsp; Other
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!------------------------------------------------------------------------ bread-crumbs ------------------------------------------------------------------------>
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">@ViewBag.Title</a></li>
        </ul>
        <!--------------------------------------------------------------------- left-navigation-bar --------------------------------------------------------------------->
        @Html.Partial("_navSlider_blank", new { })
        <!----------------------------------------------------------------------- nav-collection ----------------------------------------------------------------------->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!----------------------------------------------------------------------- patient-profile ----------------------------------------------------------------------->
        <div class="profileBar">
            @Html.RenderAction("_profileBar_edit", "Member", new { DependentID = Model.dependentID })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>
    <!----------------------------------------------------------------------- form ----------------------------------------------------------------------->
    <div class="patientDashboard_container">
        <h4 class="summaryHeading">Create new</h4>
        <hr class="fancyruler">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal createForm">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.dependentID)

                <div class="form-group">
                    @Html.LabelFor(model => model.occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.occupation, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.occupation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Shift worker", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.shiftWorkCheck, true, new { @id = "shiftWorkCheck-true" }) Yes
                            @Html.RadioButtonFor(model => model.shiftWorkCheck, false, new { @id = "shiftWorkCheck-false" }) No

                            @Html.ValidationMessageFor(model => model.shiftWorkCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.shiftWorker, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.shiftWorker, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.shiftWorker, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Drug user", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.recDrugs, true, new { @id = "recDrugs-true" }) Yes
                            @Html.RadioButtonFor(model => model.recDrugs, false, new { @id = "recDrugs-false" }) No

                            @Html.ValidationMessageFor(model => model.recDrugs, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.recDrugsLastUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.recDrugsLastUsed, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*HCare-902*@
                        @Html.ValidationMessageFor(model => model.recDrugsLastUsed, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Tuberculosis Screening", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.TBScreen, true, new { @id = "tbDiagnosed-true" }) Yes
                            @Html.RadioButtonFor(model => model.TBScreen, false, new { @id = "tbDiagnosed-false", @checked = true }) No

                            @Html.ValidationMessageFor(model => model.TBScreen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TBScreenDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TBScreenDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*Hcare-904*@
                        @Html.ValidationMessageFor(model => model.TBScreenDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TBScreenResult, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TBScreenResult, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "Positive", Value = "Positive"},
                            new SelectListItem() { Text = "Negative", Value = "Negative"},

                        }, "-- Select --", new { @class = "contentBlock_Info" })

                        @Html.ValidationMessageFor(model => model.TBScreenResult, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Diagnosed with TB", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.tbDiagnosed, true, new { @id = "tbDiagnosed-true" }) Yes
                            @Html.RadioButtonFor(model => model.tbDiagnosed, false, new { @id = "tbDiagnosed-false" }) No

                            @Html.ValidationMessageFor(model => model.tbDiagnosed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tbTreatmentStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tbTreatmentStartDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*Hcare-904*@
                        @Html.ValidationMessageFor(model => model.tbTreatmentStartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tbTreatmentEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tbTreatmentEndDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*HCare-902*@
                        @Html.ValidationMessageFor(model => model.tbTreatmentEndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Patient is pregnant", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.Pregnant, true, new { @id = "Pregnant-true" }) Yes
                            @Html.RadioButtonFor(model => model.Pregnant, false, new { @id = "Pregnant-false" }) No

                            @Html.ValidationMessageFor(model => model.Pregnant, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EDD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="text-box single-line input-validation-error infoBox_doctorQuestionnaire_TB" data-val="true" data-val-date="The field must be a date." id="EDD" name="EDD" type="date" aria-required="true" aria-describedby="DOB-error" aria-invalid="true" min="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddMonths(9).ToString("yyyy-MM-dd")" oninvalid="InvalidMsg(this);"><br />
                        @Html.ValidationMessage("EDD", "", new { @class = "text-danger", @style = "margin-left:1%" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Kidney infection", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.hasKidneyInfection, true, new { @id = "hasKidneyInfection-true" }) Yes
                            @Html.RadioButtonFor(model => model.hasKidneyInfection, false, new { @id = "hasKidneyInfection-false" }) No

                            @Html.ValidationMessageFor(model => model.hasKidneyInfection, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Frail care required", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.frailCareCheck)
                            @Html.ValidationMessageFor(model => model.frailCareCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.frailCare, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.frailCare, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "• Toileting/Bathroom assistance", Value = "• Toileting/Bathroom assistance"},
                            new SelectListItem() { Text = "• Feeding", Value = "• Feeding"},
                            new SelectListItem() { Text = "• Dressing", Value = "• Dressing"},
                            new SelectListItem() { Text = "• Grooming", Value = "• Grooming"},
                            new SelectListItem() { Text = "• Walking", Value = "• Walking"},
                            new SelectListItem() { Text = "• Bathing", Value = "• Bathing"},
                            new SelectListItem() { Text = "• Other", Value = "• Other"},
                            new SelectListItem() { Text = "• None", Value = "• None"},

                        }, new { @class = "questionDrop", @id = "frailCare", @multiple = "multiple", @style = "width: 400px; margin-left: 0.8%", @required = "required" })

                        @Html.ValidationMessageFor(model => model.frailCare, "", new { @class = "text-danger", @style = "font-size: 110%!important; margin-left: 1%!important" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.frailCareComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextAreaFor(model => model.frailCareComment)
                            @Html.ValidationMessageFor(model => model.frailCareComment, "", new { @class = "text-danger", @style = "font-size: 110%;margin-left: 2%" })
                        </div>
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.LabelFor(model => model.bloodTestFrequency, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.bloodTestFrequency, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.bloodTestFrequency, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.bloodTestEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.bloodTestEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*HCare-902*@
                        @Html.ValidationMessageFor(model => model.bloodTestEffectiveDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.LabelFor(model => model.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextAreaFor(model => model.generalComments)
                            @Html.ValidationMessageFor(model => model.generalComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="fixedBack" style="margin-left: 40%">
                        <input value="Back" class="btn buttonRound_formBack go_back" onclick="backKey()" style="width: 15%!important" />
                        <input type="submit" value="Save" class="btn buttonRound_formCreate patientClinical" onclick="storageKey()" style="width: 15%" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>

    <!-- general -->
    <script>
        //date
        $(function () {
            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
            });
        });

        //date-picker
        $(document).ready(function () {
            $('.input-group.date.EDD').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
                startDate: new Date(),
                endDate: "+9M"
            });
        });
    </script>
    <!-- date-limit -->
    <script>
        var dateControler = {
            currentDate: null
        }

        $(document).on("change", ".dateLimit", function (event, ui) {
            var now = new Date();
            var selectedDate = new Date($(this).val());

            if (selectedDate > now) {
                $(this).val(dateControler.currentDate)
            } else {
                dateControler.currentDate = $(this).val();
            }
        });


    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_clinicalGeneral", Date.now());
        }
        function storageKey() {
            localStorage.setItem("create_clinicalGeneral", Date.now());
        }
    </script>

    <script>
        //frail-care-other
        $('#frailCare').change(function () {
            if ($('#frailCare').val() == "• Other") {
                $("[name='frailCareComment']").attr("required", true);


            }
            else {
                $("[name='frailCareComment']").attr("required", false);

            }
        });
    </script>
}
@model HaloCareCore.Models.Hypoglycaemia
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "hypoGlycaemia_Create";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
        06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
        Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    textarea#generalComments {
        display: block;
        width: 460%;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-left: -5%;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
        margin-top: -10%;
    }
</style>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/clincalHistory.png" /></span>&emsp; Hypoglycaemia
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">Hypoglycaemia</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.Action("_profileBar_edit", "Member", new { DependentID = Context.Request.Query["DependentID"], pro = Context.Request.Query["pro"] })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">

        <h4 class="summaryHeading">Create hypoglycaemia record</h4>
        <hr class="fancyruler">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal createForm">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.dependentID)

                <div class="form-group">
                    @Html.LabelFor(model => model.glucoseReading, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.glucoseReading, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "None", Value = "None"},
                            new SelectListItem() { Text = "Daily", Value = "Daily"},
                            new SelectListItem() { Text = "Weekly", Value = "Weekly"},
                            new SelectListItem() { Text = "Monthly", Value = "Monthly"},

                        }, "-- Select --", new { @class = "contentBlock_Info" })

                        @Html.ValidationMessageFor(model => model.glucoseReading, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Sleep patterns", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.hypoglycaemiaComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.hypoglycaemiaComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.hypoglycaemiaSymptomsComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.hypoglycaemiaSymptomsComment, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "None", Value = "None"},
                            new SelectListItem() { Text = "Tremors", Value = "• Tremors"},
                            new SelectListItem() { Text = "Sweating", Value = "• Sweating"},
                            new SelectListItem() { Text = "Palpitations", Value = "• Palpitations"},
                            new SelectListItem() { Text = "Feeling of anxiety, dread or confusion", Value = "• Feeling of anxiety/dread or confusion"},
                            new SelectListItem() { Text = "Restlessness", Value = "Restlessness"},
                            new SelectListItem() { Text = "Hunger", Value = "• Hunger"},
                            new SelectListItem() { Text = "Irritability", Value = "• Irritability"},
                            new SelectListItem() { Text = "Tingling sensation around the mouth", Value = "• Tingling sensation around the mouth"},
                            new SelectListItem() { Text = "Blurred vision", Value = "• Blurred vision"},
                        }, new { @class = "questionDrop", @id = "hypoglySymptoms", @multiple = "multiple", @style = "width: 480px; margin-left: 2%" })

                        @Html.ValidationMessageFor(model => model.hypoglycaemiaSymptomsComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.hypoglycaemiaAssistance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.hypoglycaemiaAssistance, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "0", Value = "0"},
                            new SelectListItem() { Text = "1 or 2", Value = "1 to 2"},
                            new SelectListItem() { Text = "3 or more", Value = "3 or more"},

                        }, "-- Select --", new { @class = "contentBlock_Info" })

                        @Html.ValidationMessageFor(model => model.hypoglycaemiaAssistance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emergencyRoomVisits, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.emergencyRoomVisits, new List<SelectListItem>
                       {
                            new SelectListItem() { Text = "0", Value = "0"},
                            new SelectListItem() { Text = "2 or less", Value = "2 or less"},
                            new SelectListItem() { Text = "2 or more", Value = "2 or more"},

                        }, "-- Select --", new { @class = "contentBlock_Info", @id = "Select" })

                        @Html.ValidationMessageFor(model => model.emergencyRoomVisits, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Patient uses insulin", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.insulinUseCheck, true, new { @id = "insulinUseCheck-true" }) Yes
                            @Html.RadioButtonFor(model => model.insulinUseCheck, false, new { @id = "insulinUseCheck-false" }) No

                            @Html.ValidationMessageFor(model => model.insulinUseCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Patient uses sulfonylurea", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.sulfonylureaUseCheck, true, new { @id = "sulfonylureaUseCheck-true" }) Yes
                            @Html.RadioButtonFor(model => model.sulfonylureaUseCheck, false, new { @id = "sulfonylureaUseCheck-false" }) No

                            @Html.ValidationMessageFor(model => model.sulfonylureaUseCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"CKD stage 4 or 5", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.ckdStageCheck, true, new { @id = "ckdStageCheck-true" }) Yes
                            @Html.RadioButtonFor(model => model.ckdStageCheck, false, new { @id = "ckdStageCheck-false" }) No

                            @Html.ValidationMessageFor(model => model.ckdStageCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Patient < 77 years old", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.patientAgeCheck, true, new { @id = "patientAgeCheck-true" }) Yes
                            @Html.RadioButtonFor(model => model.patientAgeCheck, false, new { @id = "patientAgeCheck-false" }) No

                            @Html.ValidationMessageFor(model => model.patientAgeCheck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextAreaFor(model => model.generalComments)
                            @Html.ValidationMessageFor(model => model.generalComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="fixedBack" style="margin-left: 40%">
                        <input value="Back" class="btn buttonRound_formBack go_back" onclick="backKey()" style="width: 15%!important" />
                        <input type="submit" value="Save" class="btn buttonRound_formCreate patientClinical" onclick="storageKey()" style="width: 15%" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )

    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>

    <!-- general -->
    <script>
        //date-picker
        $(function () {

            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
            });
        });
    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_hypo_diabetes", Date.now());
        }
        function storageKey() {
            localStorage.setItem("create_hypo_diabetes", Date.now());
        }
    </script>
}
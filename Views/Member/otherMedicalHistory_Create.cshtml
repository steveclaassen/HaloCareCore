@model HaloCareCore.Models.Questionnaire.OtherMedicalHistory
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "otherMedicalHistory_Create";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
        06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
        Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    textarea#generalComments {
        display: block;
        width: 460%;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-left: -5%;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
        margin-top: -10%;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }
</style>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><img src="~/Content/Images/memberProfile/topBar Icons/clincalHistory.png" /></span>&emsp; Other
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">Other</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.Action("_profileBar_edit", "Member", new { DependentID = Model.dependentID })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">

        <h4 class="summaryHeading">Create record</h4>
        <hr class="fancyruler">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal createForm">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.dependentID)


                <div class="form-group">
                    @Html.Label(null,"Respiratory tract", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.respiratoryTract, true, new { @id = "respiratoryTract-true" }) Yes
                            @Html.RadioButtonFor(model => model.respiratoryTract, false, new { @id = "respiratoryTract-false" }) No

                            @Html.ValidationMessageFor(model => model.respiratoryTract, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.respiratoryTractComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.respiratoryTractComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.respiratoryTractComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.respiratoryTractEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.respiratoryTractEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1990-01-01" } }) @*HCare-904*@
                        @Html.ValidationMessageFor(model => model.respiratoryTractEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Pneumonia ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.pneumonia, true, new { @id = "pneumonia-true" }) Yes
                            @Html.RadioButtonFor(model => model.pneumonia, false, new { @id = "pneumonia-false" }) No

                            @Html.ValidationMessageFor(model => model.pneumonia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.pneumoniaComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pneumoniaComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.pneumoniaComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.pneumoniaEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pneumoniaEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1990-01-01" } })@*HCare-904*@
                        @Html.ValidationMessageFor(model => model.pneumoniaEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Meningitis ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.meningitis, true, new { @id = "meningitis-true" }) Yes
                            @Html.RadioButtonFor(model => model.meningitis, false, new { @id = "meningitis-false" }) No

                            @Html.ValidationMessageFor(model => model.meningitis, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.meningitisComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.meningitisComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.meningitisComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.meningitisEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.meningitisEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } })@*HCare-904*@
                        @Html.ValidationMessageFor(model => model.meningitisEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Lymphadenopathy ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.lymphadenopathy, true, new { @id = "lymphadenopathy-true" }) Yes
                            @Html.RadioButtonFor(model => model.lymphadenopathy, false, new { @id = "lymphadenopathy-false" }) No

                            @Html.ValidationMessageFor(model => model.lymphadenopathy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lymphadenopathyComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lymphadenopathyComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.lymphadenopathyComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lymphadenopathyEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lymphadenopathyEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1990-01-01" } })@*HCare-904*@
                        @Html.ValidationMessageFor(model => model.lymphadenopathyEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Diarrhoea ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.diarrhoea, true, new { @id = "diarrhoea-true" }) Yes
                            @Html.RadioButtonFor(model => model.diarrhoea, false, new { @id = "diarrhoea-false" }) No

                            @Html.ValidationMessageFor(model => model.diarrhoea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.diarrhoeaComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.diarrhoeaComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.diarrhoeaComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.diarrhoeaEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.diarrhoeaEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } })@*HCare-904*@
                        @Html.ValidationMessageFor(model => model.diarrhoeaEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Bladder Infection ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.bladderInfection, true, new { @id = "bladderInfection-true" }) Yes
                            @Html.RadioButtonFor(model => model.bladderInfection, false, new { @id = "bladderInfection-false" }) No

                            @Html.ValidationMessageFor(model => model.bladderInfection, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.bladderInfectionComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.bladderInfectionComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.bladderInfectionComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.bladderInfectionEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.bladderInfectionEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } })
                        @Html.ValidationMessageFor(model => model.bladderInfectionEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Weight loss ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.weightLoss, true, new { @id = "weightLoss-true" }) Yes
                            @Html.RadioButtonFor(model => model.weightLoss, false, new { @id = "weightLoss-false" }) No

                            @Html.ValidationMessageFor(model => model.weightLoss, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.weightLossComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.weightLossComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.weightLossComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.weightLossEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.weightLossEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } })@*HCare-904*@
                        @Html.ValidationMessageFor(model => model.weightLossEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Cancer ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.cancer, true, new { @id = "cancer-true" }) Yes
                            @Html.RadioButtonFor(model => model.cancer, false, new { @id = "cancer-false" }) No

                            @Html.ValidationMessageFor(model => model.cancer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cancerComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cancerComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.cancerComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cancerEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cancerEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } }) @*HCare-904*@
                        @Html.ValidationMessageFor(model => model.cancerEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Cervical cancer ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.cervicalCancer, true, new { @id = "cervicalCancer-true" }) Yes
                            @Html.RadioButtonFor(model => model.cervicalCancer, false, new { @id = "cervicalCancer-false" }) No

                            @Html.ValidationMessageFor(model => model.cervicalCancer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(null,"Result ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.cervicalCancerComment, new List<SelectListItem>
                        {
                            new SelectListItem() { Text = "Positive", Value = "Positive"},
                            new SelectListItem() { Text = "Negative", Value = "Negative"},

                        }, "-- Select --", new { @class = "contentBlock_Info" })

                        @Html.ValidationMessageFor(model => model.cervicalCancerComment, "", new { @class = "text-danger", @style = "font-size: 110%;margin-left: 1%" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cervicalCancerEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="text-box single-line input-validation-error contentBlock_Info" data-val="true" data-val-date="The field must be a date." id="cervicalCancerEffectiveDate" name="cervicalCancerEffectiveDate" type="date" aria-required="true" aria-describedby="DOB-error" aria-invalid="true" min="@DateTime.Now.ToString("1900-01-01")" max="@DateTime.Now.ToString("yyyy-MM-dd")" oninvalid="InvalidMsg(this);">
                        @Html.ValidationMessageFor(model => model.cervicalCancerEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.Label(null,"Immunization ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="questionRadio" style="color: black; margin-left: 2.5%">
                            @Html.RadioButtonFor(model => model.immunization, true, new { @id = "immunization-true" }) Yes
                            @Html.RadioButtonFor(model => model.immunization, false, new { @id = "immunization-false" }) No

                            @Html.ValidationMessageFor(model => model.immunization, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.immunizationComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.immunizationComment, new { htmlAttributes = new { @class = "contentBlock_Info" } })
                        @Html.ValidationMessageFor(model => model.immunizationComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.immunizationEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.immunizationEffectiveDate, new { htmlAttributes = new { @class = "contentBlock_Info dateLimit", min = "1900-01-01" } })
                        @Html.ValidationMessageFor(model => model.immunizationEffectiveDate, "", new { @class = "text-danger", @style = "margin-left: 2%; font-size: 12px" })
                    </div>
                </div>

                <br />
                <hr class="fancyruler" />

                <div class="form-group">
                    @Html.LabelFor(model => model.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextAreaFor(model => model.generalComments)
                            @Html.ValidationMessageFor(model => model.generalComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="fixedBack" style="margin-left: 40%">
                        <input value="Back" class="btn buttonRound_formBack go_back" onclick="backKey()" style="width: 15%!important" />
                        <input type="submit" value="Save" class="btn buttonRound_formCreate patientClinical" onclick="storageKey()" style="width: 15%" />
                    </div>
                </div>

            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <!-- general -->
    <script>
        /*Date*/
        $(function () {

            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
            });
        });

    </script>
    <!-- date-limit -->
    <script>
        var dateControler = {
            currentDate: null
        }

        $(document).on("change", ".dateLimit", function (event, ui) {
            var now = new Date();
            var selectedDate = new Date($(this).val());

            if (selectedDate > now) {
                $(this).val(dateControler.currentDate)
            } else {
                dateControler.currentDate = $(this).val();
            }
        });

    </script>
    <!-- required-fields -->
    <script>
        //respiratory
        $('#respiratoryTract-true').change(function () {
            if (this.checked)
                $("[name='respiratoryTractEffectiveDate']").attr("required", true);

        });
        $('#respiratoryTract-false').change(function () {
            if (this.checked)
                $("[name='respiratoryTractEffectiveDate']").val(''),
                    $("[data-valmsg-for='respiratoryTractEffectiveDate']").hide(),
                    $("[name='respiratoryTractEffectiveDate']").attr("required", false);

        });
        //pneumonia
        $('#pneumonia-true').change(function () {
            if (this.checked)
                $("[name='pneumoniaEffectiveDate']").attr("required", true);

        });
        $('#pneumonia-false').change(function () {
            if (this.checked)
                $("[name='pneumoniaEffectiveDate']").val(''),
                    $("[data-valmsg-for='pneumoniaEffectiveDate']").hide(),
                    $("[name='pneumoniaEffectiveDate']").attr("required", false);

        });
        //meningitis
        $('#meningitis-true').change(function () {
            if (this.checked)
                $("[name='meningitisEffectiveDate']").attr("required", true);

        });
        $('#meningitis-false').change(function () {
            if (this.checked)
                $("[name='meningitisEffectiveDate']").val(''),
                    $("[data-valmsg-for='meningitisEffectiveDate']").hide(),

                    $("[name='meningitisEffectiveDate']").attr("required", false);

        });
        //lymphadenopathy
        $('#lymphadenopathy-true').change(function () {
            if (this.checked)
                $("[name='lymphadenopathyEffectiveDate']").attr("required", true);

        });
        $('#lymphadenopathy-false').change(function () {
            if (this.checked)
                $("[name='lymphadenopathyEffectiveDate']").val(''),
                    $("[data-valmsg-for='lymphadenopathyEffectiveDate']").hide(),
                    $("[name='lymphadenopathyEffectiveDate']").attr("required", false);

        });
        //diarrhoea
        $('#diarrhoea-true').change(function () {
            if (this.checked)
                $("[name='diarrhoeaEffectiveDate']").attr("required", true);

        });
        $('#diarrhoea-false').change(function () {
            if (this.checked)
                $("[name='diarrhoeaEffectiveDate']").val(''),
                    $("[data-valmsg-for='diarrhoeaEffectiveDate']").hide(),
                    $("[name='diarrhoeaEffectiveDate']").attr("required", false);

        });
        //bladderInfection
        $('#bladderInfection-true').change(function () {
            if (this.checked)
                $("[name='bladderInfectionEffectiveDate']").attr("required", true);

        });
        $('#bladderInfection-false').change(function () {
            if (this.checked)
                $("[name='bladderInfectionEffectiveDate']").val(''),
                    $("[data-valmsg-for='bladderInfectionEffectiveDate']").hide(),
                    $("[name='bladderInfectionEffectiveDate']").attr("required", false);

        });
        //weightLoss
        $('#weightLoss-true').change(function () {
            if (this.checked)
                $("[name='weightLossEffectiveDate']").attr("required", true);

        });
        $('#weightLoss-false').change(function () {
            if (this.checked)
                $("[name='weightLossEffectiveDate']").val(''),
                    $("[data-valmsg-for='weightLossEffectiveDate']").hide(),
                    $("[name='weightLossEffectiveDate']").attr("required", false);

        });
        //cancer
        $('#cancer-true').change(function () {
            if (this.checked)
                $("[name='cancerEffectiveDate']").attr("required", true);

        });
        $('#cancer-false').change(function () {
            if (this.checked)
                $("[name='cancerEffectiveDate']").val(''),
                    $("[data-valmsg-for='cancerEffectiveDate']").hide(),
                    $("[name='cancerEffectiveDate']").attr("required", false);

        });
        //immunization
        $('#immunization-true').change(function () {
            if (this.checked)
                $("[name='immunizationEffectiveDate']").attr("required", true);

        });
        $('#immunization-false').change(function () {
            if (this.checked)
                $("[name='immunizationEffectiveDate']").val(''),
                    $("[data-valmsg-for='immunizationEffectiveDate']").hide(),
                    $("[name='immunizationEffectiveDate']").attr("required", false);

        });

    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_otherMedication_hiv", Date.now());
        }
        function storageKey() {
            localStorage.setItem("create_otherMedication_hiv", Date.now());
        }
    </script>

}
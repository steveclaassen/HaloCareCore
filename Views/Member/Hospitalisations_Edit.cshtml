@model HaloCareCore.Models.HospitalAuthViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Hospitalisations_Edit";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}

<comment>
    <!--
    12 June 2019 -- HCare-722 (Change "Follow up" to red on patient history drop-down menus)
    I have added alert badges that draw the users attention to the fields that are either marked with a follow up or that are empty/null.

    06 August 2019 -- HCare-758(Generel - Redirect to tab functionality)
    Using jquery to add localStorage in order to redirect to the last tab that the user was on and a Submit/Save Button clicked. This will take you back to the origin tab.

    31 December 2019 -- HCare-895(Hospitalisation & Diagnosis Patient Clinical / patient history)
    Future date restriction has been added to the Hospitalisation Create and Edit view's
    Also applied to Diagnosis Create and Edit

    11 February 2020 -- HCare-962(BUG: Hospitilisation and Diagnosis - saving without a date)
    Added the requirement for the date in the Edit function of Hospitalisation and Diagnosis

    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .input-group-addon {
        visibility: hidden;
    }

    textarea#hospitalizationAuth_generalComments {
        display: block;
        width: 400px;
        max-width: 1500px !important;
        height: 100px;
        max-height: 250px;
        padding: 6px 6px;
        line-height: 1.428571429;
        color: #003366;
        vertical-align: middle;
        border: 1px solid #f4f4f4;
        background-color: transparent;
        border-radius: 2px;
        margin-left: 1% !important;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: 1px 1px 1px 0px rgba(0,0,0,0.20);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        outline: none !important;
        font-family: 'Century Gothic';
        font-size: 100%;
        font-weight: 200;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }
</style>

<!--pageHeader-->
<nav id="global-nav" class="nav">
    <div class="pull-left title">
        <h1 class="site-title_patientProfile">
            <span><i class="fas fa-hospital-symbol"></i>&emsp; Hospitalisations</span>
        </h1>
    </div>
    <div class="pull-right title">
        <h1 class="site-title_userID pull-right">
            <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
        </h1>
        <h1 class="site-title_userID pull-right">
            @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
            {
                <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
            }
        </h1>
        <h1 class="site-waffleIcon pull-right">
            <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
        </h1>
    </div>
</nav>

<div class="dashboardContainer zero-padding">
    <div class="patientDashboard_View">
        <!--breadCrumbs-->
        <ul class="breadcrumbs_patientDashboard">
            <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
            <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
            <li><a class="go_back">Patient</a></li>
            <li><a href="#">Hospitalisations</a></li>
        </ul>
        <!--Left navSlider -->
        @Html.Partial("_navSlider_blank", new { })
        <!--navCollection-->
        <div class="navCollection_patientDashboard">
            @Html.Partial("_navCollection")
        </div>
        <!--profileInformation-->
        <div class="profileBar">
            @Html.Action("_profileBar_edit", "Member", new { DependentID = Model.dependantID, pro = Context.Request.Query["pro"] })
        </div>
    </div>

    <div class="profilebar-spacer-assignment"></div>

    <div class="patientDashboard_container">

        <h4 class="summaryHeading">Edit Hospitalisation</h4>
        <hr class="fancyruler">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal editForm">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.hospitalizationAuth.id)
                @Html.HiddenFor(model => model.hospitalizationAuth.membershipNo)
                @Html.HiddenFor(model => model.hospitalizationAuth.medicalAid)
                @Html.HiddenFor(model => model.dependantID)
                @Html.HiddenFor(model => model.hospitalizationAuth.programType)

                @if (Model.hospitalizationAuth.followUp == true)
                {
                    <div id="followUp_anchor">
                        <a id="followUpLink" href="#anchor_followUp">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="check box"></i>
                        </a>
                    </div>
                }
                @if (Model.hospitalizationAuth.generalComments == "follow up" || Model.hospitalizationAuth.generalComments == "Follow up" || Model.hospitalizationAuth.generalComments == "Follow Up" || Model.hospitalizationAuth.generalComments == "" || Model.hospitalizationAuth.generalComments == null)
                {
                    <div id="comment_anchor">
                        <a id="commentLink" href="#anchor_comment">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="comment"></i>
                        </a>
                    </div>
                }
                @if (Model.hospitalizationAuth.authType == "Follow up" || Model.hospitalizationAuth.authType == null || Model.hospitalizationAuth.authType == "")
                {
                    <div id="authType_anchor">
                        <a id="authTypeLink" href="#anchor_authType">
                            <i class="fas fa-exclamation-triangle pulse anchor_warning" title="auth type"></i>
                        </a>
                    </div>
                }

                <div id="anchor_actualAdminDate">
                    @if (Model.hospitalizationAuth.actualAdminDate == null)
                    {
                        <div id="warning_date">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.hospitalizationAuth.actualAdminDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <!-- Datepicker as text field -->
                            <div class="input-group date pickerBox">
                                @Html.TextBoxFor(model => model.hospitalizationAuth.actualAdminDate, "{0:dd MMM yyyy}", new { @class = "infoBox_editMember", @autocomplete = "off", @placeholder = "example: 01 Jan 2000", @required = "required" })
                                @Html.ValidationMessageFor(model => model.hospitalizationAuth.actualAdminDate, "", new { @class = "text-danger", @style = "margin-left: 1%; font-size: 12px" })

                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-th"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="">
                    @if (Model.hospitalizationAuth.authType == "Follow up" || Model.hospitalizationAuth.authType == null || Model.hospitalizationAuth.authType == "")
                    {
                        <div id="warning_authType">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.hospitalizationAuth.authType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.hospitalizationAuth.authType, new { htmlAttributes = new { @class = "infoBox_editMember", @placeholder = "Authorisation type" } })
                            @Html.ValidationMessageFor(model => model.hospitalizationAuth.authType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.hospitalizationAuth.programType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("programType", null, "- Select -", new { @class = "infoBox_editMember" })
                            @Html.ValidationMessageFor(model => model.hospitalizationAuth.programType, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div id="">
                    @if (Model.hospitalizationAuth.generalComments == "follow up" || Model.hospitalizationAuth.generalComments == "Follow up" || Model.hospitalizationAuth.generalComments == "Follow Up" || Model.hospitalizationAuth.generalComments == "" || Model.hospitalizationAuth.generalComments == null)
                    {
                        <div id="warning_comment">
                            <i class="fas fa-exclamation-triangle pulse followUp_alert"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.hospitalizationAuth.generalComments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.hospitalizationAuth.generalComments, new { @placeholder = "comment" })
                            @Html.ValidationMessageFor(model => model.hospitalizationAuth.generalComments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="">
                    @if (Model.hospitalizationAuth.followUp == true)
                    {
                        <div id="warning_followUp">
                            <i class="fas fa-exclamation-triangle pulse followUp_warning"></i>
                        </div>

                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.hospitalizationAuth.followUp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.hospitalizationAuth.followUp)
                                @Html.ValidationMessageFor(model => model.hospitalizationAuth.followUp, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.hospitalizationAuth.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.hospitalizationAuth.Active)
                            @Html.ValidationMessageFor(model => model.hospitalizationAuth.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="fixedBack" style="margin-left: 40%">
                    <input value="Back" class="btn buttonRound_formBack go_back" onclick="backKey()" style="width: 15%!important" />
                    <input type="submit" value="Save" class="btn buttonRound_formCreate patientClinical" onclick="storageKey()" style="width: 15%" />
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
    <!--General-->
    <script>
        /*Date*/
        $(function () {

            $('.input-group.date').datepicker({
                format: "dd M yyyy",
                showButtonPanel: true,
                autoclose: true,
                endDate: new Date()
            });
        });
    </script>
    <!--Alerts-->
    <script>
        //alert_Date
        $(document).ready(function () {
            setInterval(function () {
                if ($("#hospitalizationAuth_actualAdminDate").val() == "") {
                    $('#warning_date').removeClass('houdini'),
                        $('#date_anchor').removeClass('houdini');
                }
                else if ($("#hospitalizationAuth_actualAdminDate").val() == null) {
                    $('#warning_date').removeClass('houdini'),
                        $('#date_anchor').removeClass('houdini');
                }
                else {
                    $("#hospitalizationAuth_actualAdminDate").removeClass('warningFont'),
                        $('#warning_date').addClass('houdini'),
                        $('#date_anchor').addClass('houdini');


                }
            }, 0);
        });
        //followUp auth field
        $(document).ready(function () {
            setInterval(function () {
                if ($("[name='hospitalizationAuth.authType']").val() == "• Follow up") {
                    $("#hospitalizationAuth_authType").addClass('warningFont'),
                        $('#warning_authType').removeClass('hidden'),
                        $('#authType_anchor').removeClass('hidden');
                }
                else if ($("[name='hospitalizationAuth.authType']").val().toLowerCase() == "follow up") {
                    $("#hospitalizationAuth_authType").addClass('warningFont'),
                        $('#warning_authType').removeClass('hidden'),
                        $('#authType_anchor').removeClass('hidden');
                }
                else if ($("[name='hospitalizationAuth.authType']").val().toLowerCase() == "") {
                    $("#hospitalizationAuth_authType").removeClass('warningFont'),
                        $('#warning_authType').removeClass('hidden'),
                        $('#authType_anchor').removeClass('hidden');
                }
                else if ($("[name='hospitalizationAuth.authType']").val().toLowerCase() == null) {
                    $("#hospitalizationAuth_authType").removeClass('warningFont'),
                        $('#warning_authType').removeClass('hidden'),
                        $('#authType_anchor').removeClass('hidden');
                }
                else {
                    $("#hospitalizationAuth_authType").removeClass('warningFont'),
                        $('#warning_authType').addClass('hidden'),
                        $('#authType_anchor').addClass('hidden');
                }
            }, 0);
        });

        //followUp comments field
        $(document).ready(function () {
            setInterval(function () {
                if ($("#hospitalizationAuth_generalComments").val().toLowerCase() == "follow up") {
                    $("#hospitalizationAuth_generalComments").addClass('warningFont'),
                        $('#warning_comment').removeClass('houdini'),
                        $('#comment_anchor').removeClass('houdini');
                }
                else if ($("#hospitalizationAuth_generalComments").val().toLowerCase() == "") {
                    $('#warning_comment').removeClass('houdini'),
                        $('#comment_anchor').removeClass('houdini');
                }
                else {
                    $("#hospitalizationAuth_generalComments").removeClass('warningFont'),
                        $('#hospitalizationAuth_generalComments').addClass('fontUpdate'),
                        $('#warning_comment').addClass('houdini'),
                        $('#comment_anchor').addClass('houdini');


                }
            }, 0);
        });

        //followUp field
        $(document).ready(function () {
            setInterval(function () {
                $('#hospitalizationAuth_followUp').change(function () {
                    if (this.checked)
                        $('#warning_followUp').removeClass('houdini'),
                            $('#followUp_anchor').removeClass('houdini');

                    else
                        $('#warning_followUp').addClass('houdini'),
                            $('#followUp_anchor').addClass('houdini');


                });
            }, 0);
        });

    </script>
    <!--Links-->
    <script>
        //authType
        $("#authTypeLink").click(function () {
            $("[name='hospitalizationAuth.authType']").toggleClass('highlight');
            setTimeout(function () {
                // toggle back after 1 second
                $("[name='hospitalizationAuth.authType']").toggleClass('highlight');
            }, 300);
        });

        //authType
        $("#commentLink").click(function () {
            $("[name='hospitalizationAuth.generalComments']").toggleClass('textBox_highlight');
            setTimeout(function () {
                // toggle back after 1 second
                $("[name='hospitalizationAuth.generalComments']").toggleClass('textBox_highlight');
            }, 300);
        });

    </script>
    <!-- local-storage-redirect -->
    <script>
        function backKey() {
            localStorage.setItem("back_hospitalisation", Date.now());
        }
        function storageKey() {
            localStorage.setItem("edit_hospitalisation", Date.now());
        }
    </script>

}

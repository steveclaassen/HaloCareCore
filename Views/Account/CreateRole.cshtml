@model HaloCareCore.Models.ViewModels.UserRoleAccessViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "CreateRole";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}
<comment>
    <!--
        11 December 2019 -- HCare-929(LINKED TO HCARE-134: Module 3 - Cleanup fo the access level forms (Related to HCare-889))
        Adjusting the views to accomodate the update for access level
    -->
</comment>
<style>
    body {
        background-color: #f9f9fc !important;
    }

    .field-validation-error:before {
        font-family: FontAwesome;
        content: "\f06a\00a0";
        animation: pulse 2s ease infinite;
    }

    .error-alert {
        width: 100%;
        margin: 0 auto;
        background-color: rgba(217, 83, 79, 0.1);
        padding: 10px;
        border-left-color: #d9534f !important;
        border: 1px solid transparent;
        border-left-width: 5px;
        border-radius: 3px;
        margin: 0 auto;
        font-family: 'Open Sans', sans-serif;
        font-size: 12px;
        margin: 0 0 5px 0;
        margin-top: -10px;
        margin-bottom: 20px;
    }

        .error-alert span {
            color: #d9534f;
            text-align: center;
        }
</style>
<javascript>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</javascript>

<div class="fullScreen_container zero-padding">

    <!--pageHeader-->
    <nav id="global-nav" class="nav">
        <div class="pull-left title">
            <h1 class="site-title_patientProfile">
                <span><i class="fas fa-pencil"></i>&emsp; Roles</span>
            </h1>
        </div>
        <div class="pull-right title">
            <h1 class="site-title_userID pull-right">
                <div class="halocareLogo"><img src="~/Content/Images/Navigation/navBarIcons/haloCare_White.png" /></div>
            </h1>
            <h1 class="site-title_userID pull-right">
                @if (HttpContextAccessor.HttpContext.Session.GetString("Init") != null)
                {
                    <span href="#" id="userMenu-toggle"><span class="initials_Avatar" style="color: white!important; font-size: 16px">@HttpContextAccessor.HttpContext.Session.GetString("Init").ToString() </span></span>
                }
            </h1>
            <h1 class="site-waffleIcon pull-right">
                <span href="#" id="patientMenu-toggle"><span class="waffleIcon" style="color: white!important; font-size: 12px"><i class="fas fa-th"></i></span></span>
            </h1>
        </div>
    </nav>
    <!--breadCrumbs-->
    <ul class="breadcrumbs_fullScreens">
        <li style="font-size: 12px; color: #0081b3; font-weight: 200">You are here:</li>
        <li><a href="@Url.Action("Index", "Home", new {})">Home</a></li>
        <li><a href="@Url.Action("ListRoles", "Account", new {})">Roles</a></li>
        <li><a href="#">Create</a></li>
    </ul>
    <!--navCollection-->
    <div class="navCollection_fullScreens">
        @Html.Partial("_navCollection")
    </div>
    <div style="margin-bottom: 2%"></div>

    <h4 class="tableHeading">Create new</h4>
    <hr class="fancyruler">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="description-validation" id="description-validation" />
        <div class="col-md-12"><div id="duplicate-description-notice" class="hidden"><div class="error-alert"><span>&emsp; <i class="fas fa-exclamation-triangle"></i>&nbsp; Description already exists!</span></div></div></div>
        <br />
        <br />
        <div class="form-horizontal createForm">
            <div class="form-group">
                @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control-new", @onblur = "CheckName()" } })
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger", @style = "font-size: 90%; margin-left: 1%" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.admin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.admin)
                        @Html.ValidationMessageFor(model => model.admin, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.settingsRights, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.settingsRights)
                        @Html.ValidationMessageFor(model => model.settingsRights, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div>
                <table class="table riskRatingTable sortable" id="aTable">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.workflows[0].description)
                        </th>
                        <th style="text-align: center!important">
                            @Html.DisplayNameFor(model => model.workflows[0].selected)
                        </th>
                    </tr>

                    @for (int i = 0; i < Model.workflows.Count(); i++)
                    {
                        <tr>
                            @Html.HiddenFor(model => model.workflows[i].Id)
                            @Html.HiddenFor(model => model.roleId)
                            @Html.HiddenFor(model => model.workflows[i].assignmentTypeId)
                            <td>
                                @Html.DisplayFor(model => model.workflows[i].description)
                            </td>
                            <td class="accountCheck">
                                @Html.EditorFor(model => model.workflows[i].selected)
                            </td>
                        </tr>
                    }

                </table>
            </div>

            <div class="fixed-btn">
                <input id="submit" type="submit" value="Submit" class="btn create-button-large" onclick="storageKey()" style="width: 12%" /><br />
                <input type="text" value="Back" class="btn reset-button go_back" onclick="backKey()" />
            </div>

        </div>
    }
</div>

@section scripts{
    <script src="~/bundles/jqueryui"></script>
    <style src="~/Content/themes/base/css" )
    <script src="~/Scripts/layout-buttons-general.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script>
        function CheckName() {
            var name = $('#role').val();
            name = name.toLowerCase().replace(/\s+/g, "");
            $("#description-validation").val("");

            $.ajax({
                url: '/Account/RoleNameCheck',
                type: "POST",
                dataType: "JSON",
                data: { role: name },
                success: function (result) {
                    var description = result.name;
                    if (description.toLowerCase().replace(/\s+/g, "") == name.toLowerCase().replace(/\s+/g, "")) {
                        $("#duplicate-description-notice").removeClass("hidden");
                        $('span[data-valmsg-for="role"]').html('<span style="font-size: 12px"><i class="fas fa-exclamation-circle"></i> </span>Description already exists!');
                        $("#description-validation").val(description);
                    }
                },
                error: function (result) {
                    $('span[data-valmsg-for="role"]').html('');
                    $("#duplicate-description-notice").addClass("hidden");
                }
            });
        }
        $("#submit").click(function () {
            if ($("#description-validation").val().length > 0) {
                $("#role").focus();
                return false;
            }
        });

    </script>
    <script>
        function backKey() {
            localStorage.setItem("back_role", Date.now());
        }
        function storageKey() {
            localStorage.setItem("create_role", Date.now());
        }
    </script>

}
